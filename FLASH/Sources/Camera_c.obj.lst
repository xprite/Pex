   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Camera.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CameraInit,"ax",%progbits
  19              		.align	2
  20              		.global	CameraInit
  21              		.thumb
  22              		.thumb_func
  24              	CameraInit:
  25              	.LFB0:
  26              		.file 1 "../Sources/Camera.c"
   1:../Sources/Camera.c **** /*
   2:../Sources/Camera.c ****  * Common.c
   3:../Sources/Camera.c ****  *
   4:../Sources/Camera.c ****  *  Created on: Mar 13, 2013
   5:../Sources/Camera.c ****  *      Author: z
   6:../Sources/Camera.c ****  */
   7:../Sources/Camera.c **** 
   8:../Sources/Camera.c **** #include "Camera.h"
   9:../Sources/Camera.c **** 
  10:../Sources/Camera.c **** void CameraInit(TCamera* aCamera)
  11:../Sources/Camera.c **** {
  27              		.loc 1 11 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  12:../Sources/Camera.c ****   int i=0;	
  43              		.loc 1 12 0
  44 0008 4FF00003 		mov	r3, #0
  45 000c FB60     		str	r3, [r7, #12]
  13:../Sources/Camera.c ****   aCamera->clockExposureOffset = DEFAULT_EXPOSURE_OFFSET;
  46              		.loc 1 13 0
  47 000e 7B68     		ldr	r3, [r7, #4]
  48 0010 4FF06402 		mov	r2, #100
  49 0014 C3F88C23 		str	r2, [r3, #908]
  14:../Sources/Camera.c ****   aCamera->pixelClockCounter = 0;
  50              		.loc 1 14 0
  51 0018 7B68     		ldr	r3, [r7, #4]
  52 001a 4FF00002 		mov	r2, #0
  53 001e C3F89824 		str	r2, [r3, #1176]
  15:../Sources/Camera.c ****   aCamera->readPointerToBuffer = aCamera->cameraRawData0;
  54              		.loc 1 15 0
  55 0022 7B68     		ldr	r3, [r7, #4]
  56 0024 03F56672 		add	r2, r3, #920
  57 0028 7B68     		ldr	r3, [r7, #4]
  58 002a C3F89423 		str	r2, [r3, #916]
  16:../Sources/Camera.c ****   aCamera->writePointerToBuffer = aCamera->cameraRawData0;
  59              		.loc 1 16 0
  60 002e 7B68     		ldr	r3, [r7, #4]
  61 0030 03F56672 		add	r2, r3, #920
  62 0034 7B68     		ldr	r3, [r7, #4]
  63 0036 C3F89023 		str	r2, [r3, #912]
  17:../Sources/Camera.c ****   memset(&aCamera->cameraRawData0[0], PIXEL_NUM, 0);
  18:../Sources/Camera.c ****   memset(&aCamera->cameraRawData1[0], PIXEL_NUM, 0);
  19:../Sources/Camera.c **** 
  20:../Sources/Camera.c **** #if 0 
  21:../Sources/Camera.c ****   aCamera->Kernel[0] = 1;
  22:../Sources/Camera.c ****   aCamera->Kernel[1] = 1;
  23:../Sources/Camera.c ****   aCamera->Kernel[2] = 1;
  24:../Sources/Camera.c ****   aCamera->Kernel[3] = 1;
  25:../Sources/Camera.c ****   aCamera->Kernel[4] =  0;
  26:../Sources/Camera.c ****   aCamera->Kernel[5] =  -1;
  27:../Sources/Camera.c ****   aCamera->Kernel[6] =  -1;
  28:../Sources/Camera.c ****   aCamera->Kernel[7] =  -1;
  29:../Sources/Camera.c ****   aCamera->Kernel[8] =  -1;
  30:../Sources/Camera.c **** #endif
  31:../Sources/Camera.c ****   
  32:../Sources/Camera.c **** // fill the pattern  
  33:../Sources/Camera.c ****   for(i=0 ; i<50 ; i++)
  64              		.loc 1 33 0
  65 003a 4FF00003 		mov	r3, #0
  66 003e FB60     		str	r3, [r7, #12]
  67 0040 41E0     		b	.L2
  68              	.L10:
  34:../Sources/Camera.c ****   {
  35:../Sources/Camera.c ****     switch(i/10)
  69              		.loc 1 35 0
  70 0042 FA68     		ldr	r2, [r7, #12]
  71 0044 46F26763 		movw	r3, #26215
  72 0048 C6F26663 		movt	r3, 26214
  73 004c 83FB0213 		smull	r1, r3, r3, r2
  74 0050 4FEAA301 		asr	r1, r3, #2
  75 0054 4FEAE273 		asr	r3, r2, #31
  76 0058 CB1A     		subs	r3, r1, r3
  77 005a 042B     		cmp	r3, #4
  78 005c 2FD8     		bhi	.L3
  79 005e 01A2     		adr	r2, .L9
  80 0060 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  81              		.align	2
  82              	.L9:
  83 0064 79000000 		.word	.L4+1
  84 0068 87000000 		.word	.L5+1
  85 006c 95000000 		.word	.L6+1
  86 0070 A3000000 		.word	.L7+1
  87 0074 B1000000 		.word	.L8+1
  88              	.L4:
  36:../Sources/Camera.c ****     {
  37:../Sources/Camera.c ****     case 0:
  38:../Sources/Camera.c ****       aCamera->FinishLinePattern[i] = -2;
  89              		.loc 1 38 0
  90 0078 7B68     		ldr	r3, [r7, #4]
  91 007a FA68     		ldr	r2, [r7, #12]
  92 007c 6FF00101 		mvn	r1, #1
  93 0080 43F82210 		str	r1, [r3, r2, lsl #2]
  39:../Sources/Camera.c ****       break;
  94              		.loc 1 39 0
  95 0084 1BE0     		b	.L3
  96              	.L5:
  40:../Sources/Camera.c ****     case 1:
  41:../Sources/Camera.c ****       aCamera->FinishLinePattern[i] = 3;
  97              		.loc 1 41 0
  98 0086 7B68     		ldr	r3, [r7, #4]
  99 0088 FA68     		ldr	r2, [r7, #12]
 100 008a 4FF00301 		mov	r1, #3
 101 008e 43F82210 		str	r1, [r3, r2, lsl #2]
  42:../Sources/Camera.c ****       break;
 102              		.loc 1 42 0
 103 0092 14E0     		b	.L3
 104              	.L6:
  43:../Sources/Camera.c ****     case 2:
  44:../Sources/Camera.c ****       aCamera->FinishLinePattern[i] = -2;
 105              		.loc 1 44 0
 106 0094 7B68     		ldr	r3, [r7, #4]
 107 0096 FA68     		ldr	r2, [r7, #12]
 108 0098 6FF00101 		mvn	r1, #1
 109 009c 43F82210 		str	r1, [r3, r2, lsl #2]
  45:../Sources/Camera.c ****       break;
 110              		.loc 1 45 0
 111 00a0 0DE0     		b	.L3
 112              	.L7:
  46:../Sources/Camera.c ****     case 3:
  47:../Sources/Camera.c ****       aCamera->FinishLinePattern[i] = 3;
 113              		.loc 1 47 0
 114 00a2 7B68     		ldr	r3, [r7, #4]
 115 00a4 FA68     		ldr	r2, [r7, #12]
 116 00a6 4FF00301 		mov	r1, #3
 117 00aa 43F82210 		str	r1, [r3, r2, lsl #2]
  48:../Sources/Camera.c ****       break;
 118              		.loc 1 48 0
 119 00ae 06E0     		b	.L3
 120              	.L8:
  49:../Sources/Camera.c ****     case 4:
  50:../Sources/Camera.c ****       aCamera->FinishLinePattern[i] = -2;
 121              		.loc 1 50 0
 122 00b0 7B68     		ldr	r3, [r7, #4]
 123 00b2 FA68     		ldr	r2, [r7, #12]
 124 00b4 6FF00101 		mvn	r1, #1
 125 00b8 43F82210 		str	r1, [r3, r2, lsl #2]
  51:../Sources/Camera.c ****       break;
 126              		.loc 1 51 0
 127 00bc 00BF     		nop
 128              	.L3:
  33:../Sources/Camera.c ****   for(i=0 ; i<50 ; i++)
 129              		.loc 1 33 0
 130 00be FB68     		ldr	r3, [r7, #12]
 131 00c0 03F10103 		add	r3, r3, #1
 132 00c4 FB60     		str	r3, [r7, #12]
 133              	.L2:
  33:../Sources/Camera.c ****   for(i=0 ; i<50 ; i++)
 134              		.loc 1 33 0 is_stmt 0 discriminator 1
 135 00c6 FB68     		ldr	r3, [r7, #12]
 136 00c8 312B     		cmp	r3, #49
 137 00ca BADD     		ble	.L10
  52:../Sources/Camera.c ****     }
  53:../Sources/Camera.c ****   }
  54:../Sources/Camera.c ****   
  55:../Sources/Camera.c ****   aCamera->Kernel[0] =  1;
 138              		.loc 1 55 0 is_stmt 1
 139 00cc 7B68     		ldr	r3, [r7, #4]
 140 00ce 4FF00102 		mov	r2, #1
 141 00d2 C3F8A426 		str	r2, [r3, #1700]
  56:../Sources/Camera.c ****   aCamera->Kernel[1] =  0;
 142              		.loc 1 56 0
 143 00d6 7B68     		ldr	r3, [r7, #4]
 144 00d8 4FF00002 		mov	r2, #0
 145 00dc C3F8A826 		str	r2, [r3, #1704]
  57:../Sources/Camera.c ****   aCamera->Kernel[2] = -1;
 146              		.loc 1 57 0
 147 00e0 7B68     		ldr	r3, [r7, #4]
 148 00e2 4FF0FF32 		mov	r2, #-1
 149 00e6 C3F8AC26 		str	r2, [r3, #1708]
  58:../Sources/Camera.c ****   
  59:../Sources/Camera.c ****   
  60:../Sources/Camera.c **** }
 150              		.loc 1 60 0
 151 00ea 07F11407 		add	r7, r7, #20
 152 00ee BD46     		mov	sp, r7
 153 00f0 80BC     		pop	{r7}
 154 00f2 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE0:
 158              		.section	.text.Convolution,"ax",%progbits
 159              		.align	2
 160              		.global	Convolution
 161              		.thumb
 162              		.thumb_func
 164              	Convolution:
 165              	.LFB1:
  61:../Sources/Camera.c **** 
  62:../Sources/Camera.c **** void Convolution(int32_t* OutputData, uint8_t* InputData, uint8_t DataLength, int32_t* Kernel, uint
  63:../Sources/Camera.c **** {
 166              		.loc 1 63 0
 167              		.cfi_startproc
 168              		@ args = 4, pretend = 0, frame = 736
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171 0000 90B4     		push	{r4, r7}
 172              	.LCFI3:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 7, -4
 175              		.cfi_offset 4, -8
 176 0002 ADF5387D 		sub	sp, sp, #736
 177              	.LCFI4:
 178              		.cfi_def_cfa_offset 744
 179 0006 00AF     		add	r7, sp, #0
 180              	.LCFI5:
 181              		.cfi_def_cfa_register 7
 182 0008 07F10C04 		add	r4, r7, #12
 183 000c 2060     		str	r0, [r4, #0]
 184 000e 07F10800 		add	r0, r7, #8
 185 0012 0160     		str	r1, [r0, #0]
 186 0014 3946     		mov	r1, r7
 187 0016 0B60     		str	r3, [r1, #0]
 188 0018 07F10803 		add	r3, r7, #8
 189 001c 03F1FF33 		add	r3, r3, #-1
 190 0020 1A70     		strb	r2, [r3, #0]
  64:../Sources/Camera.c ****   int i;
  65:../Sources/Camera.c ****   int j;
  66:../Sources/Camera.c ****   int32_t Temp[PIXEL_NUM + PATTERN_LENGTH - 1];
  67:../Sources/Camera.c **** 
  68:../Sources/Camera.c ****   for(i=0 ; i<DataLength+KernelLength - 1 ; i++)
 191              		.loc 1 68 0
 192 0022 4FF00003 		mov	r3, #0
 193 0026 C7F8DC32 		str	r3, [r7, #732]
 194 002a 55E0     		b	.L12
 195              	.L16:
  69:../Sources/Camera.c ****   {
  70:../Sources/Camera.c ****     Temp[i] = 0;
 196              		.loc 1 70 0
 197 002c 07F11403 		add	r3, r7, #20
 198 0030 D7F8DC22 		ldr	r2, [r7, #732]
 199 0034 4FF00001 		mov	r1, #0
 200 0038 43F82210 		str	r1, [r3, r2, lsl #2]
  71:../Sources/Camera.c ****     for(j=0 ; j<KernelLength ; j++)
 201              		.loc 1 71 0
 202 003c 4FF00003 		mov	r3, #0
 203 0040 C7F8D832 		str	r3, [r7, #728]
 204 0044 2DE0     		b	.L13
 205              	.L15:
  72:../Sources/Camera.c ****     {
  73:../Sources/Camera.c ****       if((i-j)>=0) {  // TODO , check - modified condition from < to <=
 206              		.loc 1 73 0
 207 0046 D7F8DC22 		ldr	r2, [r7, #732]
 208 004a D7F8D832 		ldr	r3, [r7, #728]
 209 004e D31A     		subs	r3, r2, r3
 210 0050 002B     		cmp	r3, #0
 211 0052 20DB     		blt	.L14
  74:../Sources/Camera.c ****         Temp[i] += (int32_t) (InputData[i-j] * Kernel[j]);  //TODO - Optimize by CMSIS Convolution 
 212              		.loc 1 74 0
 213 0054 07F11403 		add	r3, r7, #20
 214 0058 D7F8DC22 		ldr	r2, [r7, #732]
 215 005c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 216 0060 D7F8DC12 		ldr	r1, [r7, #732]
 217 0064 D7F8D832 		ldr	r3, [r7, #728]
 218 0068 CB1A     		subs	r3, r1, r3
 219 006a 07F10801 		add	r1, r7, #8
 220 006e 0968     		ldr	r1, [r1, #0]
 221 0070 CB18     		adds	r3, r1, r3
 222 0072 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 223 0074 D7F8D812 		ldr	r1, [r7, #728]
 224 0078 4FEA8101 		lsl	r1, r1, #2
 225 007c 3846     		mov	r0, r7
 226 007e 0068     		ldr	r0, [r0, #0]
 227 0080 4118     		adds	r1, r0, r1
 228 0082 0968     		ldr	r1, [r1, #0]
 229 0084 01FB03F3 		mul	r3, r1, r3
 230 0088 D118     		adds	r1, r2, r3
 231 008a 07F11403 		add	r3, r7, #20
 232 008e D7F8DC22 		ldr	r2, [r7, #732]
 233 0092 43F82210 		str	r1, [r3, r2, lsl #2]
 234              	.L14:
  71:../Sources/Camera.c ****     for(j=0 ; j<KernelLength ; j++)
 235              		.loc 1 71 0
 236 0096 D7F8D832 		ldr	r3, [r7, #728]
 237 009a 03F10103 		add	r3, r3, #1
 238 009e C7F8D832 		str	r3, [r7, #728]
 239              	.L13:
  71:../Sources/Camera.c ****     for(j=0 ; j<KernelLength ; j++)
 240              		.loc 1 71 0 is_stmt 0 discriminator 1
 241 00a2 97F8E822 		ldrb	r2, [r7, #744]	@ zero_extendqisi2
 242 00a6 D7F8D832 		ldr	r3, [r7, #728]
 243 00aa 9A42     		cmp	r2, r3
 244 00ac CBDC     		bgt	.L15
  75:../Sources/Camera.c ****       }
  76:../Sources/Camera.c ****     } 
  77:../Sources/Camera.c ****   OutputData[i] = (int32_t) Temp[i];
 245              		.loc 1 77 0 is_stmt 1
 246 00ae D7F8DC32 		ldr	r3, [r7, #732]
 247 00b2 4FEA8303 		lsl	r3, r3, #2
 248 00b6 07F10C02 		add	r2, r7, #12
 249 00ba 1268     		ldr	r2, [r2, #0]
 250 00bc D318     		adds	r3, r2, r3
 251 00be 07F11402 		add	r2, r7, #20
 252 00c2 D7F8DC12 		ldr	r1, [r7, #732]
 253 00c6 52F82120 		ldr	r2, [r2, r1, lsl #2]
 254 00ca 1A60     		str	r2, [r3, #0]
  68:../Sources/Camera.c ****   for(i=0 ; i<DataLength+KernelLength - 1 ; i++)
 255              		.loc 1 68 0
 256 00cc D7F8DC32 		ldr	r3, [r7, #732]
 257 00d0 03F10103 		add	r3, r3, #1
 258 00d4 C7F8DC32 		str	r3, [r7, #732]
 259              	.L12:
  68:../Sources/Camera.c ****   for(i=0 ; i<DataLength+KernelLength - 1 ; i++)
 260              		.loc 1 68 0 is_stmt 0 discriminator 1
 261 00d8 07F10803 		add	r3, r7, #8
 262 00dc 03F1FF33 		add	r3, r3, #-1
 263 00e0 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 264 00e2 97F8E832 		ldrb	r3, [r7, #744]	@ zero_extendqisi2
 265 00e6 D318     		adds	r3, r2, r3
 266 00e8 03F1FF32 		add	r2, r3, #-1
 267 00ec D7F8DC32 		ldr	r3, [r7, #732]
 268 00f0 9A42     		cmp	r2, r3
 269 00f2 9BDC     		bgt	.L16
  78:../Sources/Camera.c ****   }
  79:../Sources/Camera.c **** }
 270              		.loc 1 79 0 is_stmt 1
 271 00f4 07F53877 		add	r7, r7, #736
 272 00f8 BD46     		mov	sp, r7
 273 00fa 90BC     		pop	{r4, r7}
 274 00fc 7047     		bx	lr
 275              		.cfi_endproc
 276              	.LFE1:
 278 00fe 00BF     		.section	.text.GetMinimumIndex,"ax",%progbits
 279              		.align	2
 280              		.global	GetMinimumIndex
 281              		.thumb
 282              		.thumb_func
 284              	GetMinimumIndex:
 285              	.LFB2:
  80:../Sources/Camera.c **** 
  81:../Sources/Camera.c **** uint8_t GetMinimumIndex(int32_t* InputVector, uint8_t VectorLength)
  82:../Sources/Camera.c **** {
 286              		.loc 1 82 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 16
 289              		@ frame_needed = 1, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 291 0000 80B4     		push	{r7}
 292              	.LCFI6:
 293              		.cfi_def_cfa_offset 4
 294              		.cfi_offset 7, -4
 295 0002 85B0     		sub	sp, sp, #20
 296              	.LCFI7:
 297              		.cfi_def_cfa_offset 24
 298 0004 00AF     		add	r7, sp, #0
 299              	.LCFI8:
 300              		.cfi_def_cfa_register 7
 301 0006 7860     		str	r0, [r7, #4]
 302 0008 0B46     		mov	r3, r1
 303 000a FB70     		strb	r3, [r7, #3]
  83:../Sources/Camera.c ****   int i;
  84:../Sources/Camera.c ****   uint8_t Minimum = 0;
 304              		.loc 1 84 0
 305 000c 4FF00003 		mov	r3, #0
 306 0010 FB72     		strb	r3, [r7, #11]
  85:../Sources/Camera.c ****   for(i=0 ; i< VectorLength ; i++)
 307              		.loc 1 85 0
 308 0012 4FF00003 		mov	r3, #0
 309 0016 FB60     		str	r3, [r7, #12]
 310 0018 13E0     		b	.L18
 311              	.L20:
  86:../Sources/Camera.c ****   {
  87:../Sources/Camera.c ****     if(InputVector[Minimum] > InputVector[i]) {
 312              		.loc 1 87 0
 313 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 314 001c 4FEA8303 		lsl	r3, r3, #2
 315 0020 7A68     		ldr	r2, [r7, #4]
 316 0022 D318     		adds	r3, r2, r3
 317 0024 1A68     		ldr	r2, [r3, #0]
 318 0026 FB68     		ldr	r3, [r7, #12]
 319 0028 4FEA8303 		lsl	r3, r3, #2
 320 002c 7968     		ldr	r1, [r7, #4]
 321 002e CB18     		adds	r3, r1, r3
 322 0030 1B68     		ldr	r3, [r3, #0]
 323 0032 9A42     		cmp	r2, r3
 324 0034 01DD     		ble	.L19
  88:../Sources/Camera.c ****       Minimum=i;
 325              		.loc 1 88 0
 326 0036 FB68     		ldr	r3, [r7, #12]
 327 0038 FB72     		strb	r3, [r7, #11]
 328              	.L19:
  85:../Sources/Camera.c ****   for(i=0 ; i< VectorLength ; i++)
 329              		.loc 1 85 0
 330 003a FB68     		ldr	r3, [r7, #12]
 331 003c 03F10103 		add	r3, r3, #1
 332 0040 FB60     		str	r3, [r7, #12]
 333              	.L18:
  85:../Sources/Camera.c ****   for(i=0 ; i< VectorLength ; i++)
 334              		.loc 1 85 0 is_stmt 0 discriminator 1
 335 0042 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 336 0044 FB68     		ldr	r3, [r7, #12]
 337 0046 9A42     		cmp	r2, r3
 338 0048 E7DC     		bgt	.L20
  89:../Sources/Camera.c ****     }
  90:../Sources/Camera.c ****   }
  91:../Sources/Camera.c ****   return Minimum;
 339              		.loc 1 91 0 is_stmt 1
 340 004a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
  92:../Sources/Camera.c **** }
 341              		.loc 1 92 0
 342 004c 1846     		mov	r0, r3
 343 004e 07F11407 		add	r7, r7, #20
 344 0052 BD46     		mov	sp, r7
 345 0054 80BC     		pop	{r7}
 346 0056 7047     		bx	lr
 347              		.cfi_endproc
 348              	.LFE2:
 350              		.section	.text.GetMaximumIndex,"ax",%progbits
 351              		.align	2
 352              		.global	GetMaximumIndex
 353              		.thumb
 354              		.thumb_func
 356              	GetMaximumIndex:
 357              	.LFB3:
  93:../Sources/Camera.c **** 
  94:../Sources/Camera.c **** uint8_t GetMaximumIndex(int32_t* InputVector, uint8_t VectorLength)
  95:../Sources/Camera.c **** {
 358              		.loc 1 95 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 16
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 363 0000 80B4     		push	{r7}
 364              	.LCFI9:
 365              		.cfi_def_cfa_offset 4
 366              		.cfi_offset 7, -4
 367 0002 85B0     		sub	sp, sp, #20
 368              	.LCFI10:
 369              		.cfi_def_cfa_offset 24
 370 0004 00AF     		add	r7, sp, #0
 371              	.LCFI11:
 372              		.cfi_def_cfa_register 7
 373 0006 7860     		str	r0, [r7, #4]
 374 0008 0B46     		mov	r3, r1
 375 000a FB70     		strb	r3, [r7, #3]
  96:../Sources/Camera.c ****   int i;
  97:../Sources/Camera.c ****   uint8_t Maximum = 0;
 376              		.loc 1 97 0
 377 000c 4FF00003 		mov	r3, #0
 378 0010 FB72     		strb	r3, [r7, #11]
  98:../Sources/Camera.c ****   for(i=0 ; i<VectorLength ; i++)
 379              		.loc 1 98 0
 380 0012 4FF00003 		mov	r3, #0
 381 0016 FB60     		str	r3, [r7, #12]
 382 0018 13E0     		b	.L22
 383              	.L24:
  99:../Sources/Camera.c ****   {
 100:../Sources/Camera.c ****     if(InputVector[Maximum] < InputVector[i])
 384              		.loc 1 100 0
 385 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 386 001c 4FEA8303 		lsl	r3, r3, #2
 387 0020 7A68     		ldr	r2, [r7, #4]
 388 0022 D318     		adds	r3, r2, r3
 389 0024 1A68     		ldr	r2, [r3, #0]
 390 0026 FB68     		ldr	r3, [r7, #12]
 391 0028 4FEA8303 		lsl	r3, r3, #2
 392 002c 7968     		ldr	r1, [r7, #4]
 393 002e CB18     		adds	r3, r1, r3
 394 0030 1B68     		ldr	r3, [r3, #0]
 395 0032 9A42     		cmp	r2, r3
 396 0034 01DA     		bge	.L23
 101:../Sources/Camera.c ****     {
 102:../Sources/Camera.c ****       Maximum=i;
 397              		.loc 1 102 0
 398 0036 FB68     		ldr	r3, [r7, #12]
 399 0038 FB72     		strb	r3, [r7, #11]
 400              	.L23:
  98:../Sources/Camera.c ****   for(i=0 ; i<VectorLength ; i++)
 401              		.loc 1 98 0
 402 003a FB68     		ldr	r3, [r7, #12]
 403 003c 03F10103 		add	r3, r3, #1
 404 0040 FB60     		str	r3, [r7, #12]
 405              	.L22:
  98:../Sources/Camera.c ****   for(i=0 ; i<VectorLength ; i++)
 406              		.loc 1 98 0 is_stmt 0 discriminator 1
 407 0042 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 408 0044 FB68     		ldr	r3, [r7, #12]
 409 0046 9A42     		cmp	r2, r3
 410 0048 E7DC     		bgt	.L24
 103:../Sources/Camera.c ****     }
 104:../Sources/Camera.c ****   }
 105:../Sources/Camera.c ****   return Maximum;  
 411              		.loc 1 105 0 is_stmt 1
 412 004a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 106:../Sources/Camera.c **** }
 413              		.loc 1 106 0
 414 004c 1846     		mov	r0, r3
 415 004e 07F11407 		add	r7, r7, #20
 416 0052 BD46     		mov	sp, r7
 417 0054 80BC     		pop	{r7}
 418 0056 7047     		bx	lr
 419              		.cfi_endproc
 420              	.LFE3:
 422              		.section	.text.GetMaximumValue,"ax",%progbits
 423              		.align	2
 424              		.global	GetMaximumValue
 425              		.thumb
 426              		.thumb_func
 428              	GetMaximumValue:
 429              	.LFB4:
 107:../Sources/Camera.c **** 
 108:../Sources/Camera.c **** int32_t GetMaximumValue(int32_t* InputVector, uint8_t VectorLength)
 109:../Sources/Camera.c **** {
 430              		.loc 1 109 0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 16
 433              		@ frame_needed = 1, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 435 0000 80B4     		push	{r7}
 436              	.LCFI12:
 437              		.cfi_def_cfa_offset 4
 438              		.cfi_offset 7, -4
 439 0002 85B0     		sub	sp, sp, #20
 440              	.LCFI13:
 441              		.cfi_def_cfa_offset 24
 442 0004 00AF     		add	r7, sp, #0
 443              	.LCFI14:
 444              		.cfi_def_cfa_register 7
 445 0006 7860     		str	r0, [r7, #4]
 446 0008 0B46     		mov	r3, r1
 447 000a FB70     		strb	r3, [r7, #3]
 110:../Sources/Camera.c ****   int i;
 111:../Sources/Camera.c ****   int32_t Maximum = InputVector[0];
 448              		.loc 1 111 0
 449 000c 7B68     		ldr	r3, [r7, #4]
 450 000e 1B68     		ldr	r3, [r3, #0]
 451 0010 BB60     		str	r3, [r7, #8]
 112:../Sources/Camera.c ****   for(i=0 ; i<VectorLength ; i++)
 452              		.loc 1 112 0
 453 0012 4FF00003 		mov	r3, #0
 454 0016 FB60     		str	r3, [r7, #12]
 455 0018 13E0     		b	.L26
 456              	.L28:
 113:../Sources/Camera.c ****   {
 114:../Sources/Camera.c ****     if(Maximum < InputVector[i])
 457              		.loc 1 114 0
 458 001a FB68     		ldr	r3, [r7, #12]
 459 001c 4FEA8303 		lsl	r3, r3, #2
 460 0020 7A68     		ldr	r2, [r7, #4]
 461 0022 D318     		adds	r3, r2, r3
 462 0024 1A68     		ldr	r2, [r3, #0]
 463 0026 BB68     		ldr	r3, [r7, #8]
 464 0028 9A42     		cmp	r2, r3
 465 002a 06DD     		ble	.L27
 115:../Sources/Camera.c ****     {
 116:../Sources/Camera.c ****       Maximum = InputVector[i];
 466              		.loc 1 116 0
 467 002c FB68     		ldr	r3, [r7, #12]
 468 002e 4FEA8303 		lsl	r3, r3, #2
 469 0032 7A68     		ldr	r2, [r7, #4]
 470 0034 D318     		adds	r3, r2, r3
 471 0036 1B68     		ldr	r3, [r3, #0]
 472 0038 BB60     		str	r3, [r7, #8]
 473              	.L27:
 112:../Sources/Camera.c ****   for(i=0 ; i<VectorLength ; i++)
 474              		.loc 1 112 0
 475 003a FB68     		ldr	r3, [r7, #12]
 476 003c 03F10103 		add	r3, r3, #1
 477 0040 FB60     		str	r3, [r7, #12]
 478              	.L26:
 112:../Sources/Camera.c ****   for(i=0 ; i<VectorLength ; i++)
 479              		.loc 1 112 0 is_stmt 0 discriminator 1
 480 0042 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 481 0044 FB68     		ldr	r3, [r7, #12]
 482 0046 9A42     		cmp	r2, r3
 483 0048 E7DC     		bgt	.L28
 117:../Sources/Camera.c ****     }
 118:../Sources/Camera.c ****   }
 119:../Sources/Camera.c ****   return Maximum;
 484              		.loc 1 119 0 is_stmt 1
 485 004a BB68     		ldr	r3, [r7, #8]
 120:../Sources/Camera.c **** }
 486              		.loc 1 120 0
 487 004c 1846     		mov	r0, r3
 488 004e 07F11407 		add	r7, r7, #20
 489 0052 BD46     		mov	sp, r7
 490 0054 80BC     		pop	{r7}
 491 0056 7047     		bx	lr
 492              		.cfi_endproc
 493              	.LFE4:
 495              		.text
 496              	.Letext0:
 497              		.file 2 "C:/Freescale/CW MCU v10.3_121211/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 498              		.file 3 "../Sources/Camera.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Camera.c
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:19     .text.CameraInit:00000000 $t
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:24     .text.CameraInit:00000000 CameraInit
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:83     .text.CameraInit:00000064 $d
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:90     .text.CameraInit:00000078 $t
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:159    .text.Convolution:00000000 $t
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:164    .text.Convolution:00000000 Convolution
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:279    .text.GetMinimumIndex:00000000 $t
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:284    .text.GetMinimumIndex:00000000 GetMinimumIndex
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:351    .text.GetMaximumIndex:00000000 $t
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:356    .text.GetMaximumIndex:00000000 GetMaximumIndex
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:423    .text.GetMaximumValue:00000000 $t
C:\Users\z\AppData\Local\Temp\ccxB5Fl6.s:428    .text.GetMaximumValue:00000000 GetMaximumValue
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
