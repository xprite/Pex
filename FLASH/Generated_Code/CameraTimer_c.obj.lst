   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CameraTimer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.ChannelDevice,"a",%progbits
  19              		.align	2
  22              	ChannelDevice:
  23 0000 01       		.byte	1
  24 0001 00       		.byte	0
  25 0002 0000     		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  26              		.align	2
  29              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  30 0000 00000000 		.space	8
  30      00000000 
  31              		.section	.bss.INT_FTM1__DEFAULT_RTOS_ISRPARAM,"aw",%nobits
  32              		.align	2
  35              	INT_FTM1__DEFAULT_RTOS_ISRPARAM:
  36 0000 00000000 		.space	4
  37              		.section	.text.CameraTimer_Init,"ax",%progbits
  38              		.align	2
  39              		.global	CameraTimer_Init
  40              		.thumb
  41              		.thumb_func
  43              	CameraTimer_Init:
  44              	.LFB0:
  45              		.file 1 "../Generated_Code/CameraTimer.c"
   1:../Generated_Code/CameraTimer.c **** /** ###################################################################
   2:../Generated_Code/CameraTimer.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/CameraTimer.c **** **     Filename    : CameraTimer.c
   4:../Generated_Code/CameraTimer.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/CameraTimer.c **** **     Processor   : MK40DX256ZVLQ10
   6:../Generated_Code/CameraTimer.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/CameraTimer.c **** **     Version     : Component 01.139, Driver 01.09, CPU db: 3.00.001
   8:../Generated_Code/CameraTimer.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/CameraTimer.c **** **     Date/Time   : 2013-04-11, 15:40, # CodeGen: 91
  10:../Generated_Code/CameraTimer.c **** **     Abstract    :
  11:../Generated_Code/CameraTimer.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/CameraTimer.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/CameraTimer.c **** **     Settings    :
  14:../Generated_Code/CameraTimer.c **** **          Component name                                 : CameraTimer
  15:../Generated_Code/CameraTimer.c **** **          Module name                                    : FTM1
  16:../Generated_Code/CameraTimer.c **** **          Counter                                        : FTM1_CNT
  17:../Generated_Code/CameraTimer.c **** **          Counter direction                              : Up
  18:../Generated_Code/CameraTimer.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/CameraTimer.c **** **          Value type                                     : Optimal
  20:../Generated_Code/CameraTimer.c **** **          Input clock source                             : Internal
  21:../Generated_Code/CameraTimer.c **** **            Counter frequency                            : 48 MHz
  22:../Generated_Code/CameraTimer.c **** **          Counter restart                                : On-match
  23:../Generated_Code/CameraTimer.c **** **            Period device                                : FTM1_MOD
  24:../Generated_Code/CameraTimer.c **** **            Period                                       : 40 µs
  25:../Generated_Code/CameraTimer.c **** **            Interrupt                                    : Enabled
  26:../Generated_Code/CameraTimer.c **** **              Interrupt                                  : INT_FTM1
  27:../Generated_Code/CameraTimer.c **** **              Interrupt priority                         : maximal priority
  28:../Generated_Code/CameraTimer.c **** **          Channel list                                   : 2
  29:../Generated_Code/CameraTimer.c **** **            Channel 0                                    : 
  30:../Generated_Code/CameraTimer.c **** **              Mode                                       : Compare
  31:../Generated_Code/CameraTimer.c **** **                Compare                                  : FTM1_C1V
  32:../Generated_Code/CameraTimer.c **** **                Offset                                   : 20 µs
  33:../Generated_Code/CameraTimer.c **** **                Output on compare                        : Set
  34:../Generated_Code/CameraTimer.c **** **                  Output on overrun                      : Clear
  35:../Generated_Code/CameraTimer.c **** **                  Initial state                          : Low
  36:../Generated_Code/CameraTimer.c **** **                  Output pin                             : PTB1/I2C0_SDA/FTM1_CH1/FTM1_QD_PHB/LCD
  37:../Generated_Code/CameraTimer.c **** **                  Output pin signal                      : 
  38:../Generated_Code/CameraTimer.c **** **                Interrupt                                : Enabled
  39:../Generated_Code/CameraTimer.c **** **                  Interrupt                              : INT_FTM1
  40:../Generated_Code/CameraTimer.c **** **                  Interrupt priority                     : maximal priority
  41:../Generated_Code/CameraTimer.c **** **            Channel 1                                    : 
  42:../Generated_Code/CameraTimer.c **** **              Mode                                       : Compare
  43:../Generated_Code/CameraTimer.c **** **                Compare                                  : FTM1_C0V
  44:../Generated_Code/CameraTimer.c **** **                Offset                                   : 30 µs
  45:../Generated_Code/CameraTimer.c **** **                Output on compare                        : Disconnect
  46:../Generated_Code/CameraTimer.c **** **                Interrupt                                : Enabled
  47:../Generated_Code/CameraTimer.c **** **                  Interrupt                              : INT_FTM1
  48:../Generated_Code/CameraTimer.c **** **                  Interrupt priority                     : maximal priority
  49:../Generated_Code/CameraTimer.c **** **          Initialization                                 : 
  50:../Generated_Code/CameraTimer.c **** **            Enabled in init. code                        : yes
  51:../Generated_Code/CameraTimer.c **** **            Auto initialization                          : yes
  52:../Generated_Code/CameraTimer.c **** **            Event mask                                   : 
  53:../Generated_Code/CameraTimer.c **** **              OnCounterRestart                           : Enabled
  54:../Generated_Code/CameraTimer.c **** **              OnChannel0                                 : Enabled
  55:../Generated_Code/CameraTimer.c **** **              OnChannel1                                 : Enabled
  56:../Generated_Code/CameraTimer.c **** **              OnChannel2                                 : Disabled
  57:../Generated_Code/CameraTimer.c **** **              OnChannel3                                 : Disabled
  58:../Generated_Code/CameraTimer.c **** **              OnChannel4                                 : Disabled
  59:../Generated_Code/CameraTimer.c **** **              OnChannel5                                 : Disabled
  60:../Generated_Code/CameraTimer.c **** **              OnChannel6                                 : Disabled
  61:../Generated_Code/CameraTimer.c **** **              OnChannel7                                 : Disabled
  62:../Generated_Code/CameraTimer.c **** **          CPU clock/configuration selection              : 
  63:../Generated_Code/CameraTimer.c **** **            Clock configuration 0                        : This component enabled
  64:../Generated_Code/CameraTimer.c **** **            Clock configuration 1                        : This component disabled
  65:../Generated_Code/CameraTimer.c **** **            Clock configuration 2                        : This component disabled
  66:../Generated_Code/CameraTimer.c **** **            Clock configuration 3                        : This component disabled
  67:../Generated_Code/CameraTimer.c **** **            Clock configuration 4                        : This component disabled
  68:../Generated_Code/CameraTimer.c **** **            Clock configuration 5                        : This component disabled
  69:../Generated_Code/CameraTimer.c **** **            Clock configuration 6                        : This component disabled
  70:../Generated_Code/CameraTimer.c **** **            Clock configuration 7                        : This component disabled
  71:../Generated_Code/CameraTimer.c **** **     Contents    :
  72:../Generated_Code/CameraTimer.c **** **         Init   - LDD_TDeviceData* CameraTimer_Init(LDD_TUserData *UserDataPtr);
  73:../Generated_Code/CameraTimer.c **** **         Deinit - void CameraTimer_Deinit(LDD_TDeviceData *DeviceDataPtr);
  74:../Generated_Code/CameraTimer.c **** **
  75:../Generated_Code/CameraTimer.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  76:../Generated_Code/CameraTimer.c **** **     
  77:../Generated_Code/CameraTimer.c **** **     http      : www.freescale.com
  78:../Generated_Code/CameraTimer.c **** **     mail      : support@freescale.com
  79:../Generated_Code/CameraTimer.c **** ** ###################################################################*/
  80:../Generated_Code/CameraTimer.c **** 
  81:../Generated_Code/CameraTimer.c **** /* MODULE CameraTimer. */
  82:../Generated_Code/CameraTimer.c **** 
  83:../Generated_Code/CameraTimer.c **** #include "Events.h"
  84:../Generated_Code/CameraTimer.c **** #include "CameraTimer.h"
  85:../Generated_Code/CameraTimer.c **** /* {Default RTOS Adapter} No RTOS includes */
  86:../Generated_Code/CameraTimer.c **** #include "IO_Map.h"
  87:../Generated_Code/CameraTimer.c **** 
  88:../Generated_Code/CameraTimer.c **** /* List of channels used by component */
  89:../Generated_Code/CameraTimer.c **** static const uint8_t ChannelDevice[CameraTimer_NUMBER_OF_CHANNELS] = {0x01U,0x00U};
  90:../Generated_Code/CameraTimer.c **** 
  91:../Generated_Code/CameraTimer.c **** 
  92:../Generated_Code/CameraTimer.c **** typedef struct {
  93:../Generated_Code/CameraTimer.c ****   LDD_TEventMask EnEvents;             /* Enable/Disable events mask */
  94:../Generated_Code/CameraTimer.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
  95:../Generated_Code/CameraTimer.c **** } CameraTimer_TDeviceData;
  96:../Generated_Code/CameraTimer.c **** 
  97:../Generated_Code/CameraTimer.c **** typedef CameraTimer_TDeviceData *CameraTimer_TDeviceDataPtr; /* Pointer to the device data structur
  98:../Generated_Code/CameraTimer.c **** 
  99:../Generated_Code/CameraTimer.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
 100:../Generated_Code/CameraTimer.c **** static CameraTimer_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
 101:../Generated_Code/CameraTimer.c **** /* {Default RTOS Adapter} Global variable used for passing a parameter into ISR */
 102:../Generated_Code/CameraTimer.c **** static CameraTimer_TDeviceDataPtr INT_FTM1__DEFAULT_RTOS_ISRPARAM;
 103:../Generated_Code/CameraTimer.c **** 
 104:../Generated_Code/CameraTimer.c **** #define AVAILABLE_EVENTS_MASK (LDD_TEventMask)(LDD_TIMERUNIT_ON_CHANNEL_0 | LDD_TIMERUNIT_ON_CHANNE
 105:../Generated_Code/CameraTimer.c **** #define AVAILABLE_PIN_MASK (LDD_TPinMask)(CameraTimer_CHANNEL_0_PIN)
 106:../Generated_Code/CameraTimer.c **** #define LAST_CHANNEL 0x01U
 107:../Generated_Code/CameraTimer.c **** 
 108:../Generated_Code/CameraTimer.c **** /* Internal method prototypes */
 109:../Generated_Code/CameraTimer.c **** /*
 110:../Generated_Code/CameraTimer.c **** ** ===================================================================
 111:../Generated_Code/CameraTimer.c **** **     Method      :  CameraTimer_Init (component TimerUnit_LDD)
 112:../Generated_Code/CameraTimer.c **** **
 113:../Generated_Code/CameraTimer.c **** **     Description :
 114:../Generated_Code/CameraTimer.c **** **         Initializes the device. Allocates memory for the device data
 115:../Generated_Code/CameraTimer.c **** **         structure, allocates interrupt vectors and sets interrupt
 116:../Generated_Code/CameraTimer.c **** **         priority, sets pin routing, sets timing, etc. If the
 117:../Generated_Code/CameraTimer.c **** **         property <"Enable in init. code"> is set to "yes" value then
 118:../Generated_Code/CameraTimer.c **** **         the device is also enabled (see the description of the
 119:../Generated_Code/CameraTimer.c **** **         <Enable> method). In this case the <Enable> method is not
 120:../Generated_Code/CameraTimer.c **** **         necessary and needn't to be generated. This method can be
 121:../Generated_Code/CameraTimer.c **** **         called only once. Before the second call of Init the <Deinit>
 122:../Generated_Code/CameraTimer.c **** **         must be called first.
 123:../Generated_Code/CameraTimer.c **** **     Parameters  :
 124:../Generated_Code/CameraTimer.c **** **         NAME            - DESCRIPTION
 125:../Generated_Code/CameraTimer.c **** **       * UserDataPtr     - Pointer to the user or
 126:../Generated_Code/CameraTimer.c **** **                           RTOS specific data. This pointer will be
 127:../Generated_Code/CameraTimer.c **** **                           passed as an event or callback parameter.
 128:../Generated_Code/CameraTimer.c **** **     Returns     :
 129:../Generated_Code/CameraTimer.c **** **         ---             - Pointer to the dynamically allocated
 130:../Generated_Code/CameraTimer.c **** **                           private structure or NULL if there was an
 131:../Generated_Code/CameraTimer.c **** **                           error.
 132:../Generated_Code/CameraTimer.c **** ** ===================================================================
 133:../Generated_Code/CameraTimer.c **** */
 134:../Generated_Code/CameraTimer.c **** LDD_TDeviceData* CameraTimer_Init(LDD_TUserData *UserDataPtr)
 135:../Generated_Code/CameraTimer.c **** {
  46              		.loc 1 135 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 16
  49              		@ frame_needed = 1, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51 0000 80B4     		push	{r7}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 4
  54              		.cfi_offset 7, -4
  55 0002 85B0     		sub	sp, sp, #20
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 24
  58 0004 00AF     		add	r7, sp, #0
  59              	.LCFI2:
  60              		.cfi_def_cfa_register 7
  61 0006 7860     		str	r0, [r7, #4]
 136:../Generated_Code/CameraTimer.c ****   /* Allocate device structure */
 137:../Generated_Code/CameraTimer.c ****   CameraTimer_TDeviceData *DeviceDataPrv;
 138:../Generated_Code/CameraTimer.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 139:../Generated_Code/CameraTimer.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  62              		.loc 1 139 0
  63 0008 40F20003 		movw	r3, #:lower16:DeviceDataPrv__DEFAULT_RTOS_ALLOC
  64 000c C0F20003 		movt	r3, #:upper16:DeviceDataPrv__DEFAULT_RTOS_ALLOC
  65 0010 FB60     		str	r3, [r7, #12]
 140:../Generated_Code/CameraTimer.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  66              		.loc 1 140 0
  67 0012 FB68     		ldr	r3, [r7, #12]
  68 0014 7A68     		ldr	r2, [r7, #4]
  69 0016 5A60     		str	r2, [r3, #4]
 141:../Generated_Code/CameraTimer.c ****   /* Interrupt vector(s) allocation */
 142:../Generated_Code/CameraTimer.c ****   /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the glo
 143:../Generated_Code/CameraTimer.c ****   INT_FTM1__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
  70              		.loc 1 143 0
  71 0018 40F20003 		movw	r3, #:lower16:INT_FTM1__DEFAULT_RTOS_ISRPARAM
  72 001c C0F20003 		movt	r3, #:upper16:INT_FTM1__DEFAULT_RTOS_ISRPARAM
  73 0020 FA68     		ldr	r2, [r7, #12]
  74 0022 1A60     		str	r2, [r3, #0]
 144:../Generated_Code/CameraTimer.c ****   /* SIM_SCGC6: FTM1=1 */
 145:../Generated_Code/CameraTimer.c ****   SIM_SCGC6 |= SIM_SCGC6_FTM1_MASK;                                                   
  75              		.loc 1 145 0
  76 0024 4FF4E043 		mov	r3, #28672
  77 0028 C4F20403 		movt	r3, 16388
  78 002c 4FF4E042 		mov	r2, #28672
  79 0030 C4F20402 		movt	r2, 16388
  80 0034 02F58052 		add	r2, r2, #4096
  81 0038 02F13C02 		add	r2, r2, #60
  82 003c 1268     		ldr	r2, [r2, #0]
  83 003e 42F00072 		orr	r2, r2, #33554432
  84 0042 03F58053 		add	r3, r3, #4096
  85 0046 03F13C03 		add	r3, r3, #60
  86 004a 1A60     		str	r2, [r3, #0]
 146:../Generated_Code/CameraTimer.c ****   /* FTM1_MODE: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 147:../Generated_Code/CameraTimer.c ****   FTM1_MODE = FTM_MODE_WPDIS_MASK;     /* Set up mode register */
  87              		.loc 1 147 0
  88 004c 4FF41043 		mov	r3, #36864
  89 0050 C4F20303 		movt	r3, 16387
  90 0054 4FF00402 		mov	r2, #4
  91 0058 5A65     		str	r2, [r3, #84]
 148:../Generated_Code/CameraTimer.c ****   /* FTM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 149:../Generated_Code/CameraTimer.c ****   FTM1_SC = 0x00U;                     /* Clear status and control register */
  92              		.loc 1 149 0
  93 005a 4FF41043 		mov	r3, #36864
  94 005e C4F20303 		movt	r3, 16387
  95 0062 4FF00002 		mov	r2, #0
  96 0066 1A60     		str	r2, [r3, #0]
 150:../Generated_Code/CameraTimer.c ****   /* FTM1_CNTIN: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,IN
 151:../Generated_Code/CameraTimer.c ****   FTM1_CNTIN = 0x00U;                  /* Clear counter initial register */
  97              		.loc 1 151 0
  98 0068 4FF41043 		mov	r3, #36864
  99 006c C4F20303 		movt	r3, 16387
 100 0070 4FF00002 		mov	r2, #0
 101 0074 DA64     		str	r2, [r3, #76]
 152:../Generated_Code/CameraTimer.c ****   /* FTM1_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 153:../Generated_Code/CameraTimer.c ****   FTM1_CNT = 0x00U;                    /* Reset counter register */
 102              		.loc 1 153 0
 103 0076 4FF41043 		mov	r3, #36864
 104 007a C4F20303 		movt	r3, 16387
 105 007e 4FF00002 		mov	r2, #0
 106 0082 5A60     		str	r2, [r3, #4]
 154:../Generated_Code/CameraTimer.c ****   /* FTM1_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 155:../Generated_Code/CameraTimer.c ****   FTM1_C0SC = 0x00U;                   /* Clear channel status and control register */
 107              		.loc 1 155 0
 108 0084 4FF41043 		mov	r3, #36864
 109 0088 C4F20303 		movt	r3, 16387
 110 008c 4FF00002 		mov	r2, #0
 111 0090 DA60     		str	r2, [r3, #12]
 156:../Generated_Code/CameraTimer.c ****   /* FTM1_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 157:../Generated_Code/CameraTimer.c ****   FTM1_C1SC = 0x00U;                   /* Clear channel status and control register */
 112              		.loc 1 157 0
 113 0092 4FF41043 		mov	r3, #36864
 114 0096 C4F20303 		movt	r3, 16387
 115 009a 4FF00002 		mov	r2, #0
 116 009e 5A61     		str	r2, [r3, #20]
 158:../Generated_Code/CameraTimer.c ****   /* FTM1_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 159:../Generated_Code/CameraTimer.c ****   FTM1_MOD = FTM_MOD_MOD(0x077F);      /* Set up modulo register */
 117              		.loc 1 159 0
 118 00a0 4FF41043 		mov	r3, #36864
 119 00a4 C4F20303 		movt	r3, 16387
 120 00a8 40F27F72 		movw	r2, #1919
 121 00ac 9A60     		str	r2, [r3, #8]
 160:../Generated_Code/CameraTimer.c ****   /* FTM1_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 161:../Generated_Code/CameraTimer.c ****   FTM1_C1SC = FTM_CnSC_CHIE_MASK |
 122              		.loc 1 161 0
 123 00ae 4FF41043 		mov	r3, #36864
 124 00b2 C4F20303 		movt	r3, 16387
 125 00b6 4FF06C02 		mov	r2, #108
 126 00ba 5A61     		str	r2, [r3, #20]
 162:../Generated_Code/CameraTimer.c ****               FTM_CnSC_MSB_MASK |
 163:../Generated_Code/CameraTimer.c ****               FTM_CnSC_ELSB_MASK |
 164:../Generated_Code/CameraTimer.c ****               FTM_CnSC_ELSA_MASK;      /* Set up channel status and control register */
 165:../Generated_Code/CameraTimer.c ****   /* FTM1_C1V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 166:../Generated_Code/CameraTimer.c ****   FTM1_C1V = FTM_CnV_VAL(0x03C0);      /* Set up channel value register */
 127              		.loc 1 166 0
 128 00bc 4FF41043 		mov	r3, #36864
 129 00c0 C4F20303 		movt	r3, 16387
 130 00c4 4FF47072 		mov	r2, #960
 131 00c8 9A61     		str	r2, [r3, #24]
 167:../Generated_Code/CameraTimer.c ****   /* FTM1_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 168:../Generated_Code/CameraTimer.c ****   FTM1_C0SC = (FTM_CnSC_CHIE_MASK | FTM_CnSC_MSA_MASK); /* Set up channel status and control regist
 132              		.loc 1 168 0
 133 00ca 4FF41043 		mov	r3, #36864
 134 00ce C4F20303 		movt	r3, 16387
 135 00d2 4FF05002 		mov	r2, #80
 136 00d6 DA60     		str	r2, [r3, #12]
 169:../Generated_Code/CameraTimer.c ****   /* FTM1_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 170:../Generated_Code/CameraTimer.c ****   FTM1_C0V = FTM_CnV_VAL(0x05A0);      /* Set up channel value register */
 137              		.loc 1 170 0
 138 00d8 4FF41043 		mov	r3, #36864
 139 00dc C4F20303 		movt	r3, 16387
 140 00e0 4FF4B462 		mov	r2, #1440
 141 00e4 1A61     		str	r2, [r3, #16]
 171:../Generated_Code/CameraTimer.c ****   /* PORTB_PCR1: ISF=0,MUX=3 */
 172:../Generated_Code/CameraTimer.c ****   PORTB_PCR1 = (uint32_t)((PORTB_PCR1 & (uint32_t)~(uint32_t)(
 142              		.loc 1 172 0
 143 00e6 4FF42043 		mov	r3, #40960
 144 00ea C4F20403 		movt	r3, 16388
 145 00ee 4FF42042 		mov	r2, #40960
 146 00f2 C4F20402 		movt	r2, 16388
 147 00f6 5268     		ldr	r2, [r2, #4]
 148 00f8 22F08072 		bic	r2, r2, #16777216
 149 00fc 22F4E062 		bic	r2, r2, #1792
 150 0100 42F44072 		orr	r2, r2, #768
 151 0104 5A60     		str	r2, [r3, #4]
 173:../Generated_Code/CameraTimer.c ****                 PORT_PCR_ISF_MASK |
 174:../Generated_Code/CameraTimer.c ****                 PORT_PCR_MUX(0x04)
 175:../Generated_Code/CameraTimer.c ****                )) | (uint32_t)(
 176:../Generated_Code/CameraTimer.c ****                 PORT_PCR_MUX(0x03)
 177:../Generated_Code/CameraTimer.c ****                ));                                                  
 178:../Generated_Code/CameraTimer.c ****   DeviceDataPrv->EnEvents = 0x0103U;   /* Enable selected events */
 152              		.loc 1 178 0
 153 0106 FB68     		ldr	r3, [r7, #12]
 154 0108 40F20312 		movw	r2, #259
 155 010c 1A60     		str	r2, [r3, #0]
 179:../Generated_Code/CameraTimer.c ****   /* NVICIP63: PRI63=0 */
 180:../Generated_Code/CameraTimer.c ****   NVICIP63 = 0x00U;                                                   
 156              		.loc 1 180 0
 157 010e 4FF46143 		mov	r3, #57600
 158 0112 CEF20003 		movt	r3, 57344
 159 0116 4FF00002 		mov	r2, #0
 160 011a 83F83F23 		strb	r2, [r3, #831]
 181:../Generated_Code/CameraTimer.c ****   /* NVICISER1: SETENA|=0x80000000 */
 182:../Generated_Code/CameraTimer.c ****   NVICISER1 |= NVIC_ISER_SETENA(0x80000000);                                                   
 161              		.loc 1 182 0
 162 011e 4FF46143 		mov	r3, #57600
 163 0122 CEF20003 		movt	r3, 57344
 164 0126 4FF46142 		mov	r2, #57600
 165 012a CEF20002 		movt	r2, 57344
 166 012e 5268     		ldr	r2, [r2, #4]
 167 0130 42F00042 		orr	r2, r2, #-2147483648
 168 0134 5A60     		str	r2, [r3, #4]
 183:../Generated_Code/CameraTimer.c ****   /* FTM1_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 184:../Generated_Code/CameraTimer.c ****   FTM1_SC = (FTM_SC_TOIE_MASK | FTM_SC_CLKS(0x01)); /* Set up status and control register */
 169              		.loc 1 184 0
 170 0136 4FF41043 		mov	r3, #36864
 171 013a C4F20303 		movt	r3, 16387
 172 013e 4FF04802 		mov	r2, #72
 173 0142 1A60     		str	r2, [r3, #0]
 185:../Generated_Code/CameraTimer.c ****   /* Registration of the device structure */
 186:../Generated_Code/CameraTimer.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_CameraTimer_ID,DeviceDataPrv);
 174              		.loc 1 186 0
 175 0144 40F20003 		movw	r3, #:lower16:PE_LDD_DeviceDataList
 176 0148 C0F20003 		movt	r3, #:upper16:PE_LDD_DeviceDataList
 177 014c FA68     		ldr	r2, [r7, #12]
 178 014e 9A61     		str	r2, [r3, #24]
 187:../Generated_Code/CameraTimer.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 179              		.loc 1 187 0
 180 0150 FB68     		ldr	r3, [r7, #12]
 188:../Generated_Code/CameraTimer.c **** }
 181              		.loc 1 188 0
 182 0152 1846     		mov	r0, r3
 183 0154 07F11407 		add	r7, r7, #20
 184 0158 BD46     		mov	sp, r7
 185 015a 80BC     		pop	{r7}
 186 015c 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE0:
 190 015e 00BF     		.section	.text.CameraTimer_Deinit,"ax",%progbits
 191              		.align	2
 192              		.global	CameraTimer_Deinit
 193              		.thumb
 194              		.thumb_func
 196              	CameraTimer_Deinit:
 197              	.LFB1:
 189:../Generated_Code/CameraTimer.c **** 
 190:../Generated_Code/CameraTimer.c **** /*
 191:../Generated_Code/CameraTimer.c **** ** ===================================================================
 192:../Generated_Code/CameraTimer.c **** **     Method      :  CameraTimer_Deinit (component TimerUnit_LDD)
 193:../Generated_Code/CameraTimer.c **** **
 194:../Generated_Code/CameraTimer.c **** **     Description :
 195:../Generated_Code/CameraTimer.c **** **         Deinitializes the device. Switches off the device, frees the
 196:../Generated_Code/CameraTimer.c **** **         device data structure memory, interrupts vectors, etc.
 197:../Generated_Code/CameraTimer.c **** **     Parameters  :
 198:../Generated_Code/CameraTimer.c **** **         NAME            - DESCRIPTION
 199:../Generated_Code/CameraTimer.c **** **       * DeviceDataPtr   - Device data structure
 200:../Generated_Code/CameraTimer.c **** **                           pointer returned by Init method
 201:../Generated_Code/CameraTimer.c **** **     Returns     : Nothing
 202:../Generated_Code/CameraTimer.c **** ** ===================================================================
 203:../Generated_Code/CameraTimer.c **** */
 204:../Generated_Code/CameraTimer.c **** void CameraTimer_Deinit(LDD_TDeviceData *DeviceDataPtr)
 205:../Generated_Code/CameraTimer.c **** {
 198              		.loc 1 205 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 16
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              	.LCFI3:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 85B0     		sub	sp, sp, #20
 208              	.LCFI4:
 209              		.cfi_def_cfa_offset 24
 210 0004 00AF     		add	r7, sp, #0
 211              	.LCFI5:
 212              		.cfi_def_cfa_register 7
 213 0006 7860     		str	r0, [r7, #4]
 206:../Generated_Code/CameraTimer.c ****   CameraTimer_TDeviceData *DeviceDataPrv = (CameraTimer_TDeviceData *)DeviceDataPtr;
 214              		.loc 1 206 0
 215 0008 7B68     		ldr	r3, [r7, #4]
 216 000a FB60     		str	r3, [r7, #12]
 207:../Generated_Code/CameraTimer.c **** 
 208:../Generated_Code/CameraTimer.c ****   (void)DeviceDataPrv;
 209:../Generated_Code/CameraTimer.c ****   FTM_PDD_SelectPrescalerSource(FTM1_BASE_PTR, FTM_PDD_DISABLED);
 217              		.loc 1 209 0
 218 000c 4FF41043 		mov	r3, #36864
 219 0010 C4F20303 		movt	r3, 16387
 220 0014 4FF41042 		mov	r2, #36864
 221 0018 C4F20302 		movt	r2, 16387
 222 001c 1268     		ldr	r2, [r2, #0]
 223 001e 22F09802 		bic	r2, r2, #152
 224 0022 1A60     		str	r2, [r3, #0]
 210:../Generated_Code/CameraTimer.c ****   /* Interrupt vector(s) deallocation */
 211:../Generated_Code/CameraTimer.c ****   /* {Default RTOS Adapter} Restore interrupt vector: IVT is static, no code is generated */
 212:../Generated_Code/CameraTimer.c ****   /* Unregistration of the device structure */
 213:../Generated_Code/CameraTimer.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_CameraTimer_ID);
 225              		.loc 1 213 0
 226 0024 40F20003 		movw	r3, #:lower16:PE_LDD_DeviceDataList
 227 0028 C0F20003 		movt	r3, #:upper16:PE_LDD_DeviceDataList
 228 002c 4FF00002 		mov	r2, #0
 229 0030 9A61     		str	r2, [r3, #24]
 214:../Generated_Code/CameraTimer.c ****   /* Deallocation of the device structure */
 215:../Generated_Code/CameraTimer.c ****   /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 216:../Generated_Code/CameraTimer.c **** }
 230              		.loc 1 216 0
 231 0032 07F11407 		add	r7, r7, #20
 232 0036 BD46     		mov	sp, r7
 233 0038 80BC     		pop	{r7}
 234 003a 7047     		bx	lr
 235              		.cfi_endproc
 236              	.LFE1:
 238              		.section	.text.CameraTimer_Interrupt,"ax",%progbits
 239              		.align	2
 240              		.global	CameraTimer_Interrupt
 241              		.thumb
 242              		.thumb_func
 244              	CameraTimer_Interrupt:
 245              	.LFB2:
 217:../Generated_Code/CameraTimer.c **** 
 218:../Generated_Code/CameraTimer.c **** /*
 219:../Generated_Code/CameraTimer.c **** ** ===================================================================
 220:../Generated_Code/CameraTimer.c **** **     Method      :  CameraTimer_Interrupt (component TimerUnit_LDD)
 221:../Generated_Code/CameraTimer.c **** **
 222:../Generated_Code/CameraTimer.c **** **     Description :
 223:../Generated_Code/CameraTimer.c **** **         The method services the interrupt of the selected peripheral(s)
 224:../Generated_Code/CameraTimer.c **** **         and eventually invokes event(s) of the component.
 225:../Generated_Code/CameraTimer.c **** **         This method is internal. It is used by Processor Expert only.
 226:../Generated_Code/CameraTimer.c **** ** ===================================================================
 227:../Generated_Code/CameraTimer.c **** */
 228:../Generated_Code/CameraTimer.c **** PE_ISR(CameraTimer_Interrupt)
 229:../Generated_Code/CameraTimer.c **** {
 246              		.loc 1 229 0
 247              		.cfi_startproc
 248              		@ Stack Align: May be called with mis-aligned SP.
 249              		@ args = 0, pretend = 0, frame = 8
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251 0000 6846     		mov	r0, sp
 252              		.cfi_register 13, 0
 253 0002 20F00701 		bic	r1, r0, #7
 254 0006 8D46     		mov	sp, r1
 255 0008 81B5     		push	{r0, r7, lr}
 256              	.LCFI6:
 257              		.cfi_def_cfa_offset 12
 258              		.cfi_offset 14, -4
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 13, -12
 261 000a 83B0     		sub	sp, sp, #12
 262              	.LCFI7:
 263              		.cfi_def_cfa_offset 24
 264 000c 00AF     		add	r7, sp, #0
 265              	.LCFI8:
 266              		.cfi_def_cfa_register 7
 230:../Generated_Code/CameraTimer.c ****   /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
 231:../Generated_Code/CameraTimer.c ****   CameraTimer_TDeviceDataPtr DeviceDataPrv = INT_FTM1__DEFAULT_RTOS_ISRPARAM;
 267              		.loc 1 231 0
 268 000e 40F20003 		movw	r3, #:lower16:INT_FTM1__DEFAULT_RTOS_ISRPARAM
 269 0012 C0F20003 		movt	r3, #:upper16:INT_FTM1__DEFAULT_RTOS_ISRPARAM
 270 0016 1B68     		ldr	r3, [r3, #0]
 271 0018 3B60     		str	r3, [r7, #0]
 232:../Generated_Code/CameraTimer.c **** 
 233:../Generated_Code/CameraTimer.c ****   LDD_TEventMask State = 0U;
 272              		.loc 1 233 0
 273 001a 4FF00003 		mov	r3, #0
 274 001e 7B60     		str	r3, [r7, #4]
 234:../Generated_Code/CameraTimer.c **** 
 235:../Generated_Code/CameraTimer.c ****   if ((FTM_PDD_GetOverflowInterruptFlag(FTM1_BASE_PTR)) != 0U) { /* Is the overflow interrupt flag 
 275              		.loc 1 235 0
 276 0020 4FF41043 		mov	r3, #36864
 277 0024 C4F20303 		movt	r3, 16387
 278 0028 1B68     		ldr	r3, [r3, #0]
 279 002a 03F08003 		and	r3, r3, #128
 280 002e 002B     		cmp	r3, #0
 281 0030 03D0     		beq	.L4
 236:../Generated_Code/CameraTimer.c ****     State |= LDD_TIMERUNIT_ON_COUNTER_RESTART; /* and set mask */
 282              		.loc 1 236 0
 283 0032 7B68     		ldr	r3, [r7, #4]
 284 0034 43F48073 		orr	r3, r3, #256
 285 0038 7B60     		str	r3, [r7, #4]
 286              	.L4:
 237:../Generated_Code/CameraTimer.c ****   }
 238:../Generated_Code/CameraTimer.c ****   if ((FTM_PDD_GetChannelInterruptFlag(FTM1_BASE_PTR, ChannelDevice[0])) != 0U) { /* Is the channel
 287              		.loc 1 238 0
 288 003a 4FF41042 		mov	r2, #36864
 289 003e C4F20302 		movt	r2, 16387
 290 0042 40F20003 		movw	r3, #:lower16:ChannelDevice
 291 0046 C0F20003 		movt	r3, #:upper16:ChannelDevice
 292 004a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 293 004c 03F10103 		add	r3, r3, #1
 294 0050 4FEAC303 		lsl	r3, r3, #3
 295 0054 D318     		adds	r3, r2, r3
 296 0056 5B68     		ldr	r3, [r3, #4]
 297 0058 03F08003 		and	r3, r3, #128
 298 005c 002B     		cmp	r3, #0
 299 005e 03D0     		beq	.L5
 239:../Generated_Code/CameraTimer.c ****     State |= LDD_TIMERUNIT_ON_CHANNEL_0; /* and set mask */
 300              		.loc 1 239 0
 301 0060 7B68     		ldr	r3, [r7, #4]
 302 0062 43F00103 		orr	r3, r3, #1
 303 0066 7B60     		str	r3, [r7, #4]
 304              	.L5:
 240:../Generated_Code/CameraTimer.c ****   }
 241:../Generated_Code/CameraTimer.c ****   if ((FTM_PDD_GetChannelInterruptFlag(FTM1_BASE_PTR, ChannelDevice[1])) != 0U) { /* Is the channel
 305              		.loc 1 241 0
 306 0068 4FF41042 		mov	r2, #36864
 307 006c C4F20302 		movt	r2, 16387
 308 0070 40F20003 		movw	r3, #:lower16:ChannelDevice
 309 0074 C0F20003 		movt	r3, #:upper16:ChannelDevice
 310 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 311 007a 03F10103 		add	r3, r3, #1
 312 007e 4FEAC303 		lsl	r3, r3, #3
 313 0082 D318     		adds	r3, r2, r3
 314 0084 5B68     		ldr	r3, [r3, #4]
 315 0086 03F08003 		and	r3, r3, #128
 316 008a 002B     		cmp	r3, #0
 317 008c 03D0     		beq	.L6
 242:../Generated_Code/CameraTimer.c ****     State |= LDD_TIMERUNIT_ON_CHANNEL_1; /* and set mask */
 318              		.loc 1 242 0
 319 008e 7B68     		ldr	r3, [r7, #4]
 320 0090 43F00203 		orr	r3, r3, #2
 321 0094 7B60     		str	r3, [r7, #4]
 322              	.L6:
 243:../Generated_Code/CameraTimer.c ****   }
 244:../Generated_Code/CameraTimer.c ****   State &= DeviceDataPrv->EnEvents;    /* Handle only enabled interrupts */
 323              		.loc 1 244 0
 324 0096 3B68     		ldr	r3, [r7, #0]
 325 0098 1B68     		ldr	r3, [r3, #0]
 326 009a 7A68     		ldr	r2, [r7, #4]
 327 009c 1340     		ands	r3, r3, r2
 328 009e 7B60     		str	r3, [r7, #4]
 245:../Generated_Code/CameraTimer.c ****   if (State & LDD_TIMERUNIT_ON_COUNTER_RESTART) { /* Is the overflow interrupt flag pending? */
 329              		.loc 1 245 0
 330 00a0 7B68     		ldr	r3, [r7, #4]
 331 00a2 03F48073 		and	r3, r3, #256
 332 00a6 002B     		cmp	r3, #0
 333 00a8 10D0     		beq	.L7
 246:../Generated_Code/CameraTimer.c ****     FTM_PDD_ClearOverflowInterruptFlag(FTM1_BASE_PTR); /* Clear flag */
 334              		.loc 1 246 0
 335 00aa 4FF41043 		mov	r3, #36864
 336 00ae C4F20303 		movt	r3, 16387
 337 00b2 4FF41042 		mov	r2, #36864
 338 00b6 C4F20302 		movt	r2, 16387
 339 00ba 1268     		ldr	r2, [r2, #0]
 340 00bc 22F08002 		bic	r2, r2, #128
 341 00c0 1A60     		str	r2, [r3, #0]
 247:../Generated_Code/CameraTimer.c ****     CameraTimer_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
 342              		.loc 1 247 0
 343 00c2 3B68     		ldr	r3, [r7, #0]
 344 00c4 5B68     		ldr	r3, [r3, #4]
 345 00c6 1846     		mov	r0, r3
 346 00c8 FFF7FEFF 		bl	CameraTimer_OnCounterRestart
 347              	.L7:
 248:../Generated_Code/CameraTimer.c ****   }
 249:../Generated_Code/CameraTimer.c ****   if (State & LDD_TIMERUNIT_ON_CHANNEL_0) { /* Is the channel 0 interrupt flag pending? */
 348              		.loc 1 249 0
 349 00cc 7B68     		ldr	r3, [r7, #4]
 350 00ce 03F00103 		and	r3, r3, #1
 351 00d2 DBB2     		uxtb	r3, r3
 352 00d4 002B     		cmp	r3, #0
 353 00d6 25D0     		beq	.L8
 250:../Generated_Code/CameraTimer.c ****     FTM_PDD_ClearChannelInterruptFlag(FTM1_BASE_PTR, ChannelDevice[0]); /* Clear flag */
 354              		.loc 1 250 0
 355 00d8 4FF41042 		mov	r2, #36864
 356 00dc C4F20302 		movt	r2, 16387
 357 00e0 40F20003 		movw	r3, #:lower16:ChannelDevice
 358 00e4 C0F20003 		movt	r3, #:upper16:ChannelDevice
 359 00e8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 360 00ea 1846     		mov	r0, r3
 361 00ec 4FF41041 		mov	r1, #36864
 362 00f0 C4F20301 		movt	r1, 16387
 363 00f4 40F20003 		movw	r3, #:lower16:ChannelDevice
 364 00f8 C0F20003 		movt	r3, #:upper16:ChannelDevice
 365 00fc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 366 00fe 03F10103 		add	r3, r3, #1
 367 0102 4FEAC303 		lsl	r3, r3, #3
 368 0106 CB18     		adds	r3, r1, r3
 369 0108 5B68     		ldr	r3, [r3, #4]
 370 010a 23F08001 		bic	r1, r3, #128
 371 010e 00F10103 		add	r3, r0, #1
 372 0112 4FEAC303 		lsl	r3, r3, #3
 373 0116 D318     		adds	r3, r2, r3
 374 0118 5960     		str	r1, [r3, #4]
 251:../Generated_Code/CameraTimer.c ****     CameraTimer_OnChannel0(DeviceDataPrv->UserDataPtr); /* Invoke OnChannel0 event */
 375              		.loc 1 251 0
 376 011a 3B68     		ldr	r3, [r7, #0]
 377 011c 5B68     		ldr	r3, [r3, #4]
 378 011e 1846     		mov	r0, r3
 379 0120 FFF7FEFF 		bl	CameraTimer_OnChannel0
 380              	.L8:
 252:../Generated_Code/CameraTimer.c ****   }
 253:../Generated_Code/CameraTimer.c ****   if (State & LDD_TIMERUNIT_ON_CHANNEL_1) { /* Is the channel 1 interrupt flag pending? */
 381              		.loc 1 253 0
 382 0124 7B68     		ldr	r3, [r7, #4]
 383 0126 03F00203 		and	r3, r3, #2
 384 012a 002B     		cmp	r3, #0
 385 012c 25D0     		beq	.L3
 254:../Generated_Code/CameraTimer.c ****     FTM_PDD_ClearChannelInterruptFlag(FTM1_BASE_PTR, ChannelDevice[1]); /* Clear flag */
 386              		.loc 1 254 0
 387 012e 4FF41042 		mov	r2, #36864
 388 0132 C4F20302 		movt	r2, 16387
 389 0136 40F20003 		movw	r3, #:lower16:ChannelDevice
 390 013a C0F20003 		movt	r3, #:upper16:ChannelDevice
 391 013e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 392 0140 1846     		mov	r0, r3
 393 0142 4FF41041 		mov	r1, #36864
 394 0146 C4F20301 		movt	r1, 16387
 395 014a 40F20003 		movw	r3, #:lower16:ChannelDevice
 396 014e C0F20003 		movt	r3, #:upper16:ChannelDevice
 397 0152 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 398 0154 03F10103 		add	r3, r3, #1
 399 0158 4FEAC303 		lsl	r3, r3, #3
 400 015c CB18     		adds	r3, r1, r3
 401 015e 5B68     		ldr	r3, [r3, #4]
 402 0160 23F08001 		bic	r1, r3, #128
 403 0164 00F10103 		add	r3, r0, #1
 404 0168 4FEAC303 		lsl	r3, r3, #3
 405 016c D318     		adds	r3, r2, r3
 406 016e 5960     		str	r1, [r3, #4]
 255:../Generated_Code/CameraTimer.c ****     CameraTimer_OnChannel1(DeviceDataPrv->UserDataPtr); /* Invoke OnChannel1 event */
 407              		.loc 1 255 0
 408 0170 3B68     		ldr	r3, [r7, #0]
 409 0172 5B68     		ldr	r3, [r3, #4]
 410 0174 1846     		mov	r0, r3
 411 0176 FFF7FEFF 		bl	CameraTimer_OnChannel1
 412              	.L3:
 256:../Generated_Code/CameraTimer.c ****   }
 257:../Generated_Code/CameraTimer.c **** }
 413              		.loc 1 257 0
 414 017a 07F10C07 		add	r7, r7, #12
 415 017e BD46     		mov	sp, r7
 416 0180 BDE88140 		pop	{r0, r7, lr}
 417 0184 8546     		mov	sp, r0
 418 0186 7047     		bx	lr
 419              		.cfi_endproc
 420              	.LFE2:
 422              		.text
 423              	.Letext0:
 424              		.file 2 "C:/Freescale/CW MCU v10.3_121211/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 425              		.file 3 "C:/temp2/Pex/Generated_Code/IO_Map.h"
 426              		.file 4 "C:/temp2/Pex/Generated_Code/PE_LDD.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CameraTimer.c
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:19     .rodata.ChannelDevice:00000000 $d
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:22     .rodata.ChannelDevice:00000000 ChannelDevice
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:26     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:29     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:32     .bss.INT_FTM1__DEFAULT_RTOS_ISRPARAM:00000000 $d
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:35     .bss.INT_FTM1__DEFAULT_RTOS_ISRPARAM:00000000 INT_FTM1__DEFAULT_RTOS_ISRPARAM
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:38     .text.CameraTimer_Init:00000000 $t
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:43     .text.CameraTimer_Init:00000000 CameraTimer_Init
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:191    .text.CameraTimer_Deinit:00000000 $t
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:196    .text.CameraTimer_Deinit:00000000 CameraTimer_Deinit
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:239    .text.CameraTimer_Interrupt:00000000 $t
C:\Users\z\AppData\Local\Temp\ccmEe58b.s:244    .text.CameraTimer_Interrupt:00000000 CameraTimer_Interrupt
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
CameraTimer_OnCounterRestart
CameraTimer_OnChannel0
CameraTimer_OnChannel1
