   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Steering.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.SetServoPosition,"ax",%progbits
  19              		.align	2
  20              		.global	SetServoPosition
  21              		.thumb
  22              		.thumb_func
  24              	SetServoPosition:
  25              	.LFB0:
  26              		.file 1 "../Sources/Steering.c"
   1:../Sources/Steering.c **** /*
   2:../Sources/Steering.c ****  * Steering.c
   3:../Sources/Steering.c ****  *
   4:../Sources/Steering.c ****  *  Created on: Apr 11, 2013
   5:../Sources/Steering.c ****  *      Author: x
   6:../Sources/Steering.c ****  */
   7:../Sources/Steering.c **** 
   8:../Sources/Steering.c **** #include "Steering.h"
   9:../Sources/Steering.c **** #include "ServoTimer.h"
  10:../Sources/Steering.c **** 
  11:../Sources/Steering.c **** extern TSteering Steering;
  12:../Sources/Steering.c **** 
  13:../Sources/Steering.c **** 
  14:../Sources/Steering.c **** 
  15:../Sources/Steering.c **** void SetServoPosition(int32_t aServoPosition)
  16:../Sources/Steering.c **** {
  27              		.loc 1 16 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 14, -4
  35              		.cfi_offset 7, -8
  36 0002 84B0     		sub	sp, sp, #16
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  17:../Sources/Steering.c ****  
  18:../Sources/Steering.c ****   int32_t temp = ((aServoPosition)) + Steering.ServoCenter; //  ServoCenter gives an offset to allo
  43              		.loc 1 18 0
  44 0008 40F20003 		movw	r3, #:lower16:Steering
  45 000c C0F20003 		movt	r3, #:upper16:Steering
  46 0010 1B88     		ldrh	r3, [r3, #0]
  47 0012 1A46     		mov	r2, r3
  48 0014 7B68     		ldr	r3, [r7, #4]
  49 0016 D318     		adds	r3, r2, r3
  50 0018 FB60     		str	r3, [r7, #12]
  19:../Sources/Steering.c **** 
  20:../Sources/Steering.c ****   if( (temp >= SERVO_MIN) && (temp <= SERVO_MAX) ) // Checking if the servo is in range.
  51              		.loc 1 20 0
  52 001a FA68     		ldr	r2, [r7, #12]
  53 001c 40F6AB53 		movw	r3, #3499
  54 0020 9A42     		cmp	r2, r3
  55 0022 10DD     		ble	.L1
  56              		.loc 1 20 0 is_stmt 0 discriminator 1
  57 0024 FA68     		ldr	r2, [r7, #12]
  58 0026 41F27C53 		movw	r3, #5500
  59 002a 9A42     		cmp	r2, r3
  60 002c 0BDC     		bgt	.L1
  21:../Sources/Steering.c ****   {
  22:../Sources/Steering.c ****     ServoTimer_SetOffsetTicks(ServoTimer_DeviceData, 0, temp); // Writing servo position to HW regi
  61              		.loc 1 22 0 is_stmt 1
  62 002e 40F20003 		movw	r3, #:lower16:PE_LDD_DeviceDataList
  63 0032 C0F20003 		movt	r3, #:upper16:PE_LDD_DeviceDataList
  64 0036 9A6B     		ldr	r2, [r3, #56]
  65 0038 FB68     		ldr	r3, [r7, #12]
  66 003a 1046     		mov	r0, r2
  67 003c 4FF00001 		mov	r1, #0
  68 0040 1A46     		mov	r2, r3
  69 0042 FFF7FEFF 		bl	ServoTimer_SetOffsetTicks
  70              	.L1:
  23:../Sources/Steering.c ****   }
  24:../Sources/Steering.c **** }
  71              		.loc 1 24 0
  72 0046 07F11007 		add	r7, r7, #16
  73 004a BD46     		mov	sp, r7
  74 004c 80BD     		pop	{r7, pc}
  75              		.cfi_endproc
  76              	.LFE0:
  78 004e 00BF     		.section	.text.SteeringInit,"ax",%progbits
  79              		.align	2
  80              		.global	SteeringInit
  81              		.thumb
  82              		.thumb_func
  84              	SteeringInit:
  85              	.LFB1:
  25:../Sources/Steering.c **** 
  26:../Sources/Steering.c **** void SteeringInit(TSteering* aSteering) // Init constants after reset
  27:../Sources/Steering.c **** {
  86              		.loc 1 27 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 0000 80B4     		push	{r7}
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 7, -4
  95 0002 83B0     		sub	sp, sp, #12
  96              	.LCFI4:
  97              		.cfi_def_cfa_offset 16
  98 0004 00AF     		add	r7, sp, #0
  99              	.LCFI5:
 100              		.cfi_def_cfa_register 7
 101 0006 7860     		str	r0, [r7, #4]
  28:../Sources/Steering.c ****   aSteering->ServoCenter = SERVO_CENTER;  // servo center
 102              		.loc 1 28 0
 103 0008 7B68     		ldr	r3, [r7, #4]
 104 000a 41F29412 		movw	r2, #4500
 105 000e 1A80     		strh	r2, [r3, #0]	@ movhi
  29:../Sources/Steering.c ****   aSteering->ServoSensitivity = SERVO_SENSITIVITY;
 106              		.loc 1 29 0
 107 0010 7B68     		ldr	r3, [r7, #4]
 108 0012 4FF01402 		mov	r2, #20
 109 0016 5A60     		str	r2, [r3, #4]
  30:../Sources/Steering.c ****   aSteering->Kp = 3;
 110              		.loc 1 30 0
 111 0018 7B68     		ldr	r3, [r7, #4]
 112 001a 4FF00302 		mov	r2, #3
 113 001e 9A62     		str	r2, [r3, #40]
  31:../Sources/Steering.c ****   aSteering->Ki = 5;
 114              		.loc 1 31 0
 115 0020 7B68     		ldr	r3, [r7, #4]
 116 0022 4FF00502 		mov	r2, #5
 117 0026 DA62     		str	r2, [r3, #44]
  32:../Sources/Steering.c ****   aSteering->Kd = 3;
 118              		.loc 1 32 0
 119 0028 7B68     		ldr	r3, [r7, #4]
 120 002a 4FF00302 		mov	r2, #3
 121 002e 1A63     		str	r2, [r3, #48]
  33:../Sources/Steering.c ****   aSteering->DesiredValue = 0;
 122              		.loc 1 33 0
 123 0030 7B68     		ldr	r3, [r7, #4]
 124 0032 4FF00002 		mov	r2, #0
 125 0036 5A61     		str	r2, [r3, #20]
  34:../Sources/Steering.c ****   aSteering->AntiWindUp = 300;
 126              		.loc 1 34 0
 127 0038 7B68     		ldr	r3, [r7, #4]
 128 003a 4FF49672 		mov	r2, #300
 129 003e 1A62     		str	r2, [r3, #32]
  35:../Sources/Steering.c **** }
 130              		.loc 1 35 0
 131 0040 07F10C07 		add	r7, r7, #12
 132 0044 BD46     		mov	sp, r7
 133 0046 80BC     		pop	{r7}
 134 0048 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE1:
 138 004a 00BF     		.section	.text.SteeringControll,"ax",%progbits
 139              		.align	2
 140              		.global	SteeringControll
 141              		.thumb
 142              		.thumb_func
 144              	SteeringControll:
 145              	.LFB2:
  36:../Sources/Steering.c **** 
  37:../Sources/Steering.c **** void SteeringControll(TSteering* aSteering)
  38:../Sources/Steering.c **** {
 146              		.loc 1 38 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              	.LCFI6:
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 14, -4
 154              		.cfi_offset 7, -8
 155 0002 82B0     		sub	sp, sp, #8
 156              	.LCFI7:
 157              		.cfi_def_cfa_offset 16
 158 0004 00AF     		add	r7, sp, #0
 159              	.LCFI8:
 160              		.cfi_def_cfa_register 7
 161 0006 7860     		str	r0, [r7, #4]
  39:../Sources/Steering.c ****   aSteering->Error = aSteering->DesiredValue - aSteering->LinePosition;
 162              		.loc 1 39 0
 163 0008 7B68     		ldr	r3, [r7, #4]
 164 000a 5A69     		ldr	r2, [r3, #20]
 165 000c 7B68     		ldr	r3, [r7, #4]
 166 000e DB68     		ldr	r3, [r3, #12]
 167 0010 D21A     		subs	r2, r2, r3
 168 0012 7B68     		ldr	r3, [r7, #4]
 169 0014 9A61     		str	r2, [r3, #24]
  40:../Sources/Steering.c ****   aSteering->Integrator += aSteering->Error;
 170              		.loc 1 40 0
 171 0016 7B68     		ldr	r3, [r7, #4]
 172 0018 1A69     		ldr	r2, [r3, #16]
 173 001a 7B68     		ldr	r3, [r7, #4]
 174 001c 9B69     		ldr	r3, [r3, #24]
 175 001e D218     		adds	r2, r2, r3
 176 0020 7B68     		ldr	r3, [r7, #4]
 177 0022 1A61     		str	r2, [r3, #16]
  41:../Sources/Steering.c ****   
  42:../Sources/Steering.c ****   if(aSteering->Integrator > aSteering->AntiWindUp) {
 178              		.loc 1 42 0
 179 0024 7B68     		ldr	r3, [r7, #4]
 180 0026 1A69     		ldr	r2, [r3, #16]
 181 0028 7B68     		ldr	r3, [r7, #4]
 182 002a 1B6A     		ldr	r3, [r3, #32]
 183 002c 9A42     		cmp	r2, r3
 184 002e 03DD     		ble	.L5
  43:../Sources/Steering.c ****     aSteering->Integrator = aSteering->AntiWindUp;
 185              		.loc 1 43 0
 186 0030 7B68     		ldr	r3, [r7, #4]
 187 0032 1A6A     		ldr	r2, [r3, #32]
 188 0034 7B68     		ldr	r3, [r7, #4]
 189 0036 1A61     		str	r2, [r3, #16]
 190              	.L5:
  44:../Sources/Steering.c ****   }
  45:../Sources/Steering.c ****   
  46:../Sources/Steering.c ****   if(aSteering->Integrator < - aSteering->AntiWindUp) {
 191              		.loc 1 46 0
 192 0038 7B68     		ldr	r3, [r7, #4]
 193 003a 1A69     		ldr	r2, [r3, #16]
 194 003c 7B68     		ldr	r3, [r7, #4]
 195 003e 1B6A     		ldr	r3, [r3, #32]
 196 0040 C3F10003 		rsb	r3, r3, #0
 197 0044 9A42     		cmp	r2, r3
 198 0046 05DA     		bge	.L6
  47:../Sources/Steering.c ****    aSteering->Integrator = - aSteering->AntiWindUp; 
 199              		.loc 1 47 0
 200 0048 7B68     		ldr	r3, [r7, #4]
 201 004a 1B6A     		ldr	r3, [r3, #32]
 202 004c C3F10002 		rsb	r2, r3, #0
 203 0050 7B68     		ldr	r3, [r7, #4]
 204 0052 1A61     		str	r2, [r3, #16]
 205              	.L6:
  48:../Sources/Steering.c ****   }
  49:../Sources/Steering.c ****   
  50:../Sources/Steering.c ****   aSteering->Output = (aSteering->Error*aSteering->Kp) + (aSteering->Integrator*aSteering->Ki) + (a
 206              		.loc 1 50 0
 207 0054 7B68     		ldr	r3, [r7, #4]
 208 0056 9B69     		ldr	r3, [r3, #24]
 209 0058 7A68     		ldr	r2, [r7, #4]
 210 005a 926A     		ldr	r2, [r2, #40]
 211 005c 02FB03F2 		mul	r2, r2, r3
 212 0060 7B68     		ldr	r3, [r7, #4]
 213 0062 1B69     		ldr	r3, [r3, #16]
 214 0064 7968     		ldr	r1, [r7, #4]
 215 0066 C96A     		ldr	r1, [r1, #44]
 216 0068 01FB03F3 		mul	r3, r1, r3
 217 006c D218     		adds	r2, r2, r3
 218 006e 7B68     		ldr	r3, [r7, #4]
 219 0070 9969     		ldr	r1, [r3, #24]
 220 0072 7B68     		ldr	r3, [r7, #4]
 221 0074 5B6A     		ldr	r3, [r3, #36]
 222 0076 CB1A     		subs	r3, r1, r3
 223 0078 7968     		ldr	r1, [r7, #4]
 224 007a 096B     		ldr	r1, [r1, #48]
 225 007c 01FB03F3 		mul	r3, r1, r3
 226 0080 D218     		adds	r2, r2, r3
 227 0082 7B68     		ldr	r3, [r7, #4]
 228 0084 DA61     		str	r2, [r3, #28]
  51:../Sources/Steering.c ****   SetServoPosition(aSteering->Output);
 229              		.loc 1 51 0
 230 0086 7B68     		ldr	r3, [r7, #4]
 231 0088 DB69     		ldr	r3, [r3, #28]
 232 008a 1846     		mov	r0, r3
 233 008c FFF7FEFF 		bl	SetServoPosition
  52:../Sources/Steering.c ****   
  53:../Sources/Steering.c ****   aSteering->lastError = aSteering->Error;
 234              		.loc 1 53 0
 235 0090 7B68     		ldr	r3, [r7, #4]
 236 0092 9A69     		ldr	r2, [r3, #24]
 237 0094 7B68     		ldr	r3, [r7, #4]
 238 0096 5A62     		str	r2, [r3, #36]
  54:../Sources/Steering.c **** }
 239              		.loc 1 54 0
 240 0098 07F10807 		add	r7, r7, #8
 241 009c BD46     		mov	sp, r7
 242 009e 80BD     		pop	{r7, pc}
 243              		.cfi_endproc
 244              	.LFE2:
 246              		.text
 247              	.Letext0:
 248              		.file 2 "C:/Freescale/CW MCU v10.3_121211/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 249              		.file 3 "../Sources/Steering.h"
 250              		.file 4 "C:/temp2/Pex/Generated_Code/PE_LDD.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Steering.c
C:\Users\z\AppData\Local\Temp\ccPUxSPG.s:19     .text.SetServoPosition:00000000 $t
C:\Users\z\AppData\Local\Temp\ccPUxSPG.s:24     .text.SetServoPosition:00000000 SetServoPosition
C:\Users\z\AppData\Local\Temp\ccPUxSPG.s:79     .text.SteeringInit:00000000 $t
C:\Users\z\AppData\Local\Temp\ccPUxSPG.s:84     .text.SteeringInit:00000000 SteeringInit
C:\Users\z\AppData\Local\Temp\ccPUxSPG.s:139    .text.SteeringControll:00000000 $t
C:\Users\z\AppData\Local\Temp\ccPUxSPG.s:144    .text.SteeringControll:00000000 SteeringControll
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Steering
PE_LDD_DeviceDataList
ServoTimer_SetOffsetTicks
