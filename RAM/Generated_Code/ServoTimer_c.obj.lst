   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ServoTimer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.ChannelDevice,"a",%progbits
  19              		.align	2
  22              	ChannelDevice:
  23 0000 00       		.space	1
  24 0001 000000   		.section	.rodata.ChannelMode,"a",%progbits
  25              		.align	2
  28              	ChannelMode:
  29 0000 00       		.space	1
  30 0001 000000   		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  31              		.align	2
  34              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  35 0000 00000000 		.space	4
  36              		.section	.text.ServoTimer_Init,"ax",%progbits
  37              		.align	2
  38              		.global	ServoTimer_Init
  39              		.thumb
  40              		.thumb_func
  42              	ServoTimer_Init:
  43              	.LFB0:
  44              		.file 1 "../Generated_Code/ServoTimer.c"
   1:../Generated_Code/ServoTimer.c **** /** ###################################################################
   2:../Generated_Code/ServoTimer.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/ServoTimer.c **** **     Filename    : ServoTimer.c
   4:../Generated_Code/ServoTimer.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/ServoTimer.c **** **     Processor   : MK40DX256ZVLQ10
   6:../Generated_Code/ServoTimer.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/ServoTimer.c **** **     Version     : Component 01.139, Driver 01.09, CPU db: 3.00.001
   8:../Generated_Code/ServoTimer.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/ServoTimer.c **** **     Date/Time   : 2013-04-11, 17:04, # CodeGen: 95
  10:../Generated_Code/ServoTimer.c **** **     Abstract    :
  11:../Generated_Code/ServoTimer.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/ServoTimer.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/ServoTimer.c **** **     Settings    :
  14:../Generated_Code/ServoTimer.c **** **          Component name                                 : ServoTimer
  15:../Generated_Code/ServoTimer.c **** **          Module name                                    : FTM2
  16:../Generated_Code/ServoTimer.c **** **          Counter                                        : FTM2_CNT
  17:../Generated_Code/ServoTimer.c **** **          Counter direction                              : Up
  18:../Generated_Code/ServoTimer.c **** **          Counter width                                  : 16 bits
  19:../Generated_Code/ServoTimer.c **** **          Value type                                     : Optimal
  20:../Generated_Code/ServoTimer.c **** **          Input clock source                             : Internal
  21:../Generated_Code/ServoTimer.c **** **            Counter frequency                            : 3 MHz
  22:../Generated_Code/ServoTimer.c **** **          Counter restart                                : On-match
  23:../Generated_Code/ServoTimer.c **** **            Period device                                : FTM2_MOD
  24:../Generated_Code/ServoTimer.c **** **            Period                                       : 50 Hz
  25:../Generated_Code/ServoTimer.c **** **            Interrupt                                    : Disabled
  26:../Generated_Code/ServoTimer.c **** **          Channel list                                   : 1
  27:../Generated_Code/ServoTimer.c **** **            Channel 0                                    : 
  28:../Generated_Code/ServoTimer.c **** **              Mode                                       : Compare
  29:../Generated_Code/ServoTimer.c **** **                Compare                                  : FTM2_C0V
  30:../Generated_Code/ServoTimer.c **** **                Offset                                   : 1.5 ms
  31:../Generated_Code/ServoTimer.c **** **                Output on compare                        : Clear
  32:../Generated_Code/ServoTimer.c **** **                  Output on overrun                      : Set
  33:../Generated_Code/ServoTimer.c **** **                  Initial state                          : Low
  34:../Generated_Code/ServoTimer.c **** **                  Output pin                             : PTB18/CAN0_TX/FTM2_CH0/I2S0_TX_BCLK/FT
  35:../Generated_Code/ServoTimer.c **** **                  Output pin signal                      : 
  36:../Generated_Code/ServoTimer.c **** **                Interrupt                                : Disabled
  37:../Generated_Code/ServoTimer.c **** **          Initialization                                 : 
  38:../Generated_Code/ServoTimer.c **** **            Enabled in init. code                        : yes
  39:../Generated_Code/ServoTimer.c **** **            Auto initialization                          : yes
  40:../Generated_Code/ServoTimer.c **** **            Event mask                                   : 
  41:../Generated_Code/ServoTimer.c **** **              OnCounterRestart                           : Disabled
  42:../Generated_Code/ServoTimer.c **** **              OnChannel0                                 : Disabled
  43:../Generated_Code/ServoTimer.c **** **              OnChannel1                                 : Disabled
  44:../Generated_Code/ServoTimer.c **** **              OnChannel2                                 : Disabled
  45:../Generated_Code/ServoTimer.c **** **              OnChannel3                                 : Disabled
  46:../Generated_Code/ServoTimer.c **** **              OnChannel4                                 : Disabled
  47:../Generated_Code/ServoTimer.c **** **              OnChannel5                                 : Disabled
  48:../Generated_Code/ServoTimer.c **** **              OnChannel6                                 : Disabled
  49:../Generated_Code/ServoTimer.c **** **              OnChannel7                                 : Disabled
  50:../Generated_Code/ServoTimer.c **** **          CPU clock/configuration selection              : 
  51:../Generated_Code/ServoTimer.c **** **            Clock configuration 0                        : This component enabled
  52:../Generated_Code/ServoTimer.c **** **            Clock configuration 1                        : This component disabled
  53:../Generated_Code/ServoTimer.c **** **            Clock configuration 2                        : This component disabled
  54:../Generated_Code/ServoTimer.c **** **            Clock configuration 3                        : This component disabled
  55:../Generated_Code/ServoTimer.c **** **            Clock configuration 4                        : This component disabled
  56:../Generated_Code/ServoTimer.c **** **            Clock configuration 5                        : This component disabled
  57:../Generated_Code/ServoTimer.c **** **            Clock configuration 6                        : This component disabled
  58:../Generated_Code/ServoTimer.c **** **            Clock configuration 7                        : This component disabled
  59:../Generated_Code/ServoTimer.c **** **     Contents    :
  60:../Generated_Code/ServoTimer.c **** **         Init           - LDD_TDeviceData* ServoTimer_Init(LDD_TUserData *UserDataPtr);
  61:../Generated_Code/ServoTimer.c **** **         Deinit         - void ServoTimer_Deinit(LDD_TDeviceData *DeviceDataPtr);
  62:../Generated_Code/ServoTimer.c **** **         SetOffsetTicks - LDD_TError ServoTimer_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, ui
  63:../Generated_Code/ServoTimer.c **** **
  64:../Generated_Code/ServoTimer.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  65:../Generated_Code/ServoTimer.c **** **     
  66:../Generated_Code/ServoTimer.c **** **     http      : www.freescale.com
  67:../Generated_Code/ServoTimer.c **** **     mail      : support@freescale.com
  68:../Generated_Code/ServoTimer.c **** ** ###################################################################*/
  69:../Generated_Code/ServoTimer.c **** 
  70:../Generated_Code/ServoTimer.c **** /* MODULE ServoTimer. */
  71:../Generated_Code/ServoTimer.c **** 
  72:../Generated_Code/ServoTimer.c **** #include "ServoTimer.h"
  73:../Generated_Code/ServoTimer.c **** /* {Default RTOS Adapter} No RTOS includes */
  74:../Generated_Code/ServoTimer.c **** #include "IO_Map.h"
  75:../Generated_Code/ServoTimer.c **** 
  76:../Generated_Code/ServoTimer.c **** /* List of channels used by component */
  77:../Generated_Code/ServoTimer.c **** static const uint8_t ChannelDevice[ServoTimer_NUMBER_OF_CHANNELS] = {0x00U};
  78:../Generated_Code/ServoTimer.c **** 
  79:../Generated_Code/ServoTimer.c **** /* Table of channels mode / 0 - compare mode, 1 - capture mode */
  80:../Generated_Code/ServoTimer.c **** static const uint8_t ChannelMode[ServoTimer_NUMBER_OF_CHANNELS] = {0x00U};
  81:../Generated_Code/ServoTimer.c **** 
  82:../Generated_Code/ServoTimer.c **** 
  83:../Generated_Code/ServoTimer.c **** typedef struct {
  84:../Generated_Code/ServoTimer.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
  85:../Generated_Code/ServoTimer.c **** } ServoTimer_TDeviceData;
  86:../Generated_Code/ServoTimer.c **** 
  87:../Generated_Code/ServoTimer.c **** typedef ServoTimer_TDeviceData *ServoTimer_TDeviceDataPtr; /* Pointer to the device data structure.
  88:../Generated_Code/ServoTimer.c **** 
  89:../Generated_Code/ServoTimer.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  90:../Generated_Code/ServoTimer.c **** static ServoTimer_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  91:../Generated_Code/ServoTimer.c **** 
  92:../Generated_Code/ServoTimer.c **** #define AVAILABLE_PIN_MASK (LDD_TPinMask)(ServoTimer_CHANNEL_0_PIN)
  93:../Generated_Code/ServoTimer.c **** #define LAST_CHANNEL 0x00U
  94:../Generated_Code/ServoTimer.c **** 
  95:../Generated_Code/ServoTimer.c **** /* Internal method prototypes */
  96:../Generated_Code/ServoTimer.c **** /*
  97:../Generated_Code/ServoTimer.c **** ** ===================================================================
  98:../Generated_Code/ServoTimer.c **** **     Method      :  ServoTimer_Init (component TimerUnit_LDD)
  99:../Generated_Code/ServoTimer.c **** **
 100:../Generated_Code/ServoTimer.c **** **     Description :
 101:../Generated_Code/ServoTimer.c **** **         Initializes the device. Allocates memory for the device data
 102:../Generated_Code/ServoTimer.c **** **         structure, allocates interrupt vectors and sets interrupt
 103:../Generated_Code/ServoTimer.c **** **         priority, sets pin routing, sets timing, etc. If the
 104:../Generated_Code/ServoTimer.c **** **         property <"Enable in init. code"> is set to "yes" value then
 105:../Generated_Code/ServoTimer.c **** **         the device is also enabled (see the description of the
 106:../Generated_Code/ServoTimer.c **** **         <Enable> method). In this case the <Enable> method is not
 107:../Generated_Code/ServoTimer.c **** **         necessary and needn't to be generated. This method can be
 108:../Generated_Code/ServoTimer.c **** **         called only once. Before the second call of Init the <Deinit>
 109:../Generated_Code/ServoTimer.c **** **         must be called first.
 110:../Generated_Code/ServoTimer.c **** **     Parameters  :
 111:../Generated_Code/ServoTimer.c **** **         NAME            - DESCRIPTION
 112:../Generated_Code/ServoTimer.c **** **       * UserDataPtr     - Pointer to the user or
 113:../Generated_Code/ServoTimer.c **** **                           RTOS specific data. This pointer will be
 114:../Generated_Code/ServoTimer.c **** **                           passed as an event or callback parameter.
 115:../Generated_Code/ServoTimer.c **** **     Returns     :
 116:../Generated_Code/ServoTimer.c **** **         ---             - Pointer to the dynamically allocated
 117:../Generated_Code/ServoTimer.c **** **                           private structure or NULL if there was an
 118:../Generated_Code/ServoTimer.c **** **                           error.
 119:../Generated_Code/ServoTimer.c **** ** ===================================================================
 120:../Generated_Code/ServoTimer.c **** */
 121:../Generated_Code/ServoTimer.c **** LDD_TDeviceData* ServoTimer_Init(LDD_TUserData *UserDataPtr)
 122:../Generated_Code/ServoTimer.c **** {
  45              		.loc 1 122 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 16
  48              		@ frame_needed = 1, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 80B4     		push	{r7}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 4
  53              		.cfi_offset 7, -4
  54 0002 85B0     		sub	sp, sp, #20
  55              	.LCFI1:
  56              		.cfi_def_cfa_offset 24
  57 0004 00AF     		add	r7, sp, #0
  58              	.LCFI2:
  59              		.cfi_def_cfa_register 7
  60 0006 7860     		str	r0, [r7, #4]
 123:../Generated_Code/ServoTimer.c ****   /* Allocate device structure */
 124:../Generated_Code/ServoTimer.c ****   ServoTimer_TDeviceData *DeviceDataPrv;
 125:../Generated_Code/ServoTimer.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 126:../Generated_Code/ServoTimer.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  61              		.loc 1 126 0
  62 0008 40F20003 		movw	r3, #:lower16:DeviceDataPrv__DEFAULT_RTOS_ALLOC
  63 000c C0F20003 		movt	r3, #:upper16:DeviceDataPrv__DEFAULT_RTOS_ALLOC
  64 0010 FB60     		str	r3, [r7, #12]
 127:../Generated_Code/ServoTimer.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  65              		.loc 1 127 0
  66 0012 FB68     		ldr	r3, [r7, #12]
  67 0014 7A68     		ldr	r2, [r7, #4]
  68 0016 1A60     		str	r2, [r3, #0]
 128:../Generated_Code/ServoTimer.c ****   /* SIM_SCGC3: FTM2=1 */
 129:../Generated_Code/ServoTimer.c ****   SIM_SCGC3 |= SIM_SCGC3_FTM2_MASK;                                                   
  69              		.loc 1 129 0
  70 0018 4FF4E043 		mov	r3, #28672
  71 001c C4F20403 		movt	r3, 16388
  72 0020 4FF4E042 		mov	r2, #28672
  73 0024 C4F20402 		movt	r2, 16388
  74 0028 02F58052 		add	r2, r2, #4096
  75 002c 02F13002 		add	r2, r2, #48
  76 0030 1268     		ldr	r2, [r2, #0]
  77 0032 42F08072 		orr	r2, r2, #16777216
  78 0036 03F58053 		add	r3, r3, #4096
  79 003a 03F13003 		add	r3, r3, #48
  80 003e 1A60     		str	r2, [r3, #0]
 130:../Generated_Code/ServoTimer.c ****   /* FTM2_MODE: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 131:../Generated_Code/ServoTimer.c ****   FTM2_MODE = FTM_MODE_WPDIS_MASK;     /* Set up mode register */
  81              		.loc 1 131 0
  82 0040 4FF40043 		mov	r3, #32768
  83 0044 C4F20B03 		movt	r3, 16395
  84 0048 4FF00402 		mov	r2, #4
  85 004c 5A65     		str	r2, [r3, #84]
 132:../Generated_Code/ServoTimer.c ****   /* FTM2_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 133:../Generated_Code/ServoTimer.c ****   FTM2_SC = 0x00U;                     /* Clear status and control register */
  86              		.loc 1 133 0
  87 004e 4FF40043 		mov	r3, #32768
  88 0052 C4F20B03 		movt	r3, 16395
  89 0056 4FF00002 		mov	r2, #0
  90 005a 1A60     		str	r2, [r3, #0]
 134:../Generated_Code/ServoTimer.c ****   /* FTM2_CNTIN: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,IN
 135:../Generated_Code/ServoTimer.c ****   FTM2_CNTIN = 0x00U;                  /* Clear counter initial register */
  91              		.loc 1 135 0
  92 005c 4FF40043 		mov	r3, #32768
  93 0060 C4F20B03 		movt	r3, 16395
  94 0064 4FF00002 		mov	r2, #0
  95 0068 DA64     		str	r2, [r3, #76]
 136:../Generated_Code/ServoTimer.c ****   /* FTM2_CNT: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,COUN
 137:../Generated_Code/ServoTimer.c ****   FTM2_CNT = 0x00U;                    /* Reset counter register */
  96              		.loc 1 137 0
  97 006a 4FF40043 		mov	r3, #32768
  98 006e C4F20B03 		movt	r3, 16395
  99 0072 4FF00002 		mov	r2, #0
 100 0076 5A60     		str	r2, [r3, #4]
 138:../Generated_Code/ServoTimer.c ****   /* FTM2_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 139:../Generated_Code/ServoTimer.c ****   FTM2_C0SC = 0x00U;                   /* Clear channel status and control register */
 101              		.loc 1 139 0
 102 0078 4FF40043 		mov	r3, #32768
 103 007c C4F20B03 		movt	r3, 16395
 104 0080 4FF00002 		mov	r2, #0
 105 0084 DA60     		str	r2, [r3, #12]
 140:../Generated_Code/ServoTimer.c ****   /* FTM2_C1SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 141:../Generated_Code/ServoTimer.c ****   FTM2_C1SC = 0x00U;                   /* Clear channel status and control register */
 106              		.loc 1 141 0
 107 0086 4FF40043 		mov	r3, #32768
 108 008a C4F20B03 		movt	r3, 16395
 109 008e 4FF00002 		mov	r2, #0
 110 0092 5A61     		str	r2, [r3, #20]
 142:../Generated_Code/ServoTimer.c ****   /* FTM2_MOD: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,MOD=
 143:../Generated_Code/ServoTimer.c ****   FTM2_MOD = FTM_MOD_MOD(0xEA5F);      /* Set up modulo register */
 111              		.loc 1 143 0
 112 0094 4FF40043 		mov	r3, #32768
 113 0098 C4F20B03 		movt	r3, 16395
 114 009c 4EF65F22 		movw	r2, #59999
 115 00a0 9A60     		str	r2, [r3, #8]
 144:../Generated_Code/ServoTimer.c ****   /* FTM2_C0SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 145:../Generated_Code/ServoTimer.c ****   FTM2_C0SC = (FTM_CnSC_MSB_MASK | FTM_CnSC_ELSB_MASK); /* Set up channel status and control regist
 116              		.loc 1 145 0
 117 00a2 4FF40043 		mov	r3, #32768
 118 00a6 C4F20B03 		movt	r3, 16395
 119 00aa 4FF02802 		mov	r2, #40
 120 00ae DA60     		str	r2, [r3, #12]
 146:../Generated_Code/ServoTimer.c ****   /* FTM2_C0V: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,VAL=
 147:../Generated_Code/ServoTimer.c ****   FTM2_C0V = FTM_CnV_VAL(0x1194);      /* Set up channel value register */
 121              		.loc 1 147 0
 122 00b0 4FF40043 		mov	r3, #32768
 123 00b4 C4F20B03 		movt	r3, 16395
 124 00b8 41F29412 		movw	r2, #4500
 125 00bc 1A61     		str	r2, [r3, #16]
 148:../Generated_Code/ServoTimer.c ****   /* PORTB_PCR18: ISF=0,MUX=3 */
 149:../Generated_Code/ServoTimer.c ****   PORTB_PCR18 = (uint32_t)((PORTB_PCR18 & (uint32_t)~(uint32_t)(
 126              		.loc 1 149 0
 127 00be 4FF42043 		mov	r3, #40960
 128 00c2 C4F20403 		movt	r3, 16388
 129 00c6 4FF42042 		mov	r2, #40960
 130 00ca C4F20402 		movt	r2, 16388
 131 00ce 926C     		ldr	r2, [r2, #72]
 132 00d0 22F08072 		bic	r2, r2, #16777216
 133 00d4 22F4E062 		bic	r2, r2, #1792
 134 00d8 42F44072 		orr	r2, r2, #768
 135 00dc 9A64     		str	r2, [r3, #72]
 150:../Generated_Code/ServoTimer.c ****                  PORT_PCR_ISF_MASK |
 151:../Generated_Code/ServoTimer.c ****                  PORT_PCR_MUX(0x04)
 152:../Generated_Code/ServoTimer.c ****                 )) | (uint32_t)(
 153:../Generated_Code/ServoTimer.c ****                  PORT_PCR_MUX(0x03)
 154:../Generated_Code/ServoTimer.c ****                 ));                                                  
 155:../Generated_Code/ServoTimer.c ****   /* FTM2_SC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 156:../Generated_Code/ServoTimer.c ****   FTM2_SC = (FTM_SC_CLKS(0x01) | FTM_SC_PS(0x04)); /* Set up status and control register */
 136              		.loc 1 156 0
 137 00de 4FF40043 		mov	r3, #32768
 138 00e2 C4F20B03 		movt	r3, 16395
 139 00e6 4FF00C02 		mov	r2, #12
 140 00ea 1A60     		str	r2, [r3, #0]
 157:../Generated_Code/ServoTimer.c ****   /* Registration of the device structure */
 158:../Generated_Code/ServoTimer.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_ServoTimer_ID,DeviceDataPrv);
 141              		.loc 1 158 0
 142 00ec 40F20003 		movw	r3, #:lower16:PE_LDD_DeviceDataList
 143 00f0 C0F20003 		movt	r3, #:upper16:PE_LDD_DeviceDataList
 144 00f4 FA68     		ldr	r2, [r7, #12]
 145 00f6 9A63     		str	r2, [r3, #56]
 159:../Generated_Code/ServoTimer.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 146              		.loc 1 159 0
 147 00f8 FB68     		ldr	r3, [r7, #12]
 160:../Generated_Code/ServoTimer.c **** }
 148              		.loc 1 160 0
 149 00fa 1846     		mov	r0, r3
 150 00fc 07F11407 		add	r7, r7, #20
 151 0100 BD46     		mov	sp, r7
 152 0102 80BC     		pop	{r7}
 153 0104 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE0:
 157 0106 00BF     		.section	.text.ServoTimer_Deinit,"ax",%progbits
 158              		.align	2
 159              		.global	ServoTimer_Deinit
 160              		.thumb
 161              		.thumb_func
 163              	ServoTimer_Deinit:
 164              	.LFB1:
 161:../Generated_Code/ServoTimer.c **** 
 162:../Generated_Code/ServoTimer.c **** /*
 163:../Generated_Code/ServoTimer.c **** ** ===================================================================
 164:../Generated_Code/ServoTimer.c **** **     Method      :  ServoTimer_Deinit (component TimerUnit_LDD)
 165:../Generated_Code/ServoTimer.c **** **
 166:../Generated_Code/ServoTimer.c **** **     Description :
 167:../Generated_Code/ServoTimer.c **** **         Deinitializes the device. Switches off the device, frees the
 168:../Generated_Code/ServoTimer.c **** **         device data structure memory, interrupts vectors, etc.
 169:../Generated_Code/ServoTimer.c **** **     Parameters  :
 170:../Generated_Code/ServoTimer.c **** **         NAME            - DESCRIPTION
 171:../Generated_Code/ServoTimer.c **** **       * DeviceDataPtr   - Device data structure
 172:../Generated_Code/ServoTimer.c **** **                           pointer returned by Init method
 173:../Generated_Code/ServoTimer.c **** **     Returns     : Nothing
 174:../Generated_Code/ServoTimer.c **** ** ===================================================================
 175:../Generated_Code/ServoTimer.c **** */
 176:../Generated_Code/ServoTimer.c **** void ServoTimer_Deinit(LDD_TDeviceData *DeviceDataPtr)
 177:../Generated_Code/ServoTimer.c **** {
 165              		.loc 1 177 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 16
 168              		@ frame_needed = 1, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170 0000 80B4     		push	{r7}
 171              	.LCFI3:
 172              		.cfi_def_cfa_offset 4
 173              		.cfi_offset 7, -4
 174 0002 85B0     		sub	sp, sp, #20
 175              	.LCFI4:
 176              		.cfi_def_cfa_offset 24
 177 0004 00AF     		add	r7, sp, #0
 178              	.LCFI5:
 179              		.cfi_def_cfa_register 7
 180 0006 7860     		str	r0, [r7, #4]
 178:../Generated_Code/ServoTimer.c ****   ServoTimer_TDeviceData *DeviceDataPrv = (ServoTimer_TDeviceData *)DeviceDataPtr;
 181              		.loc 1 178 0
 182 0008 7B68     		ldr	r3, [r7, #4]
 183 000a FB60     		str	r3, [r7, #12]
 179:../Generated_Code/ServoTimer.c **** 
 180:../Generated_Code/ServoTimer.c ****   (void)DeviceDataPrv;
 181:../Generated_Code/ServoTimer.c ****   FTM_PDD_SelectPrescalerSource(FTM2_BASE_PTR, FTM_PDD_DISABLED);
 184              		.loc 1 181 0
 185 000c 4FF40043 		mov	r3, #32768
 186 0010 C4F20B03 		movt	r3, 16395
 187 0014 4FF40042 		mov	r2, #32768
 188 0018 C4F20B02 		movt	r2, 16395
 189 001c 1268     		ldr	r2, [r2, #0]
 190 001e 22F09802 		bic	r2, r2, #152
 191 0022 1A60     		str	r2, [r3, #0]
 182:../Generated_Code/ServoTimer.c ****   /* Unregistration of the device structure */
 183:../Generated_Code/ServoTimer.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_ServoTimer_ID);
 192              		.loc 1 183 0
 193 0024 40F20003 		movw	r3, #:lower16:PE_LDD_DeviceDataList
 194 0028 C0F20003 		movt	r3, #:upper16:PE_LDD_DeviceDataList
 195 002c 4FF00002 		mov	r2, #0
 196 0030 9A63     		str	r2, [r3, #56]
 184:../Generated_Code/ServoTimer.c ****   /* Deallocation of the device structure */
 185:../Generated_Code/ServoTimer.c ****   /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 186:../Generated_Code/ServoTimer.c **** }
 197              		.loc 1 186 0
 198 0032 07F11407 		add	r7, r7, #20
 199 0036 BD46     		mov	sp, r7
 200 0038 80BC     		pop	{r7}
 201 003a 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE1:
 205              		.section	.text.ServoTimer_SetOffsetTicks,"ax",%progbits
 206              		.align	2
 207              		.global	ServoTimer_SetOffsetTicks
 208              		.thumb
 209              		.thumb_func
 211              	ServoTimer_SetOffsetTicks:
 212              	.LFB2:
 187:../Generated_Code/ServoTimer.c **** 
 188:../Generated_Code/ServoTimer.c **** /*
 189:../Generated_Code/ServoTimer.c **** ** ===================================================================
 190:../Generated_Code/ServoTimer.c **** **     Method      :  ServoTimer_SetOffsetTicks (component TimerUnit_LDD)
 191:../Generated_Code/ServoTimer.c **** **
 192:../Generated_Code/ServoTimer.c **** **     Description :
 193:../Generated_Code/ServoTimer.c **** **         Sets the new offset value to channel specified by the
 194:../Generated_Code/ServoTimer.c **** **         parameter ChannelIdx. It is user responsibility to use value
 195:../Generated_Code/ServoTimer.c **** **         below selected period. This method is available when at
 196:../Generated_Code/ServoTimer.c **** **         least one channel is configured.
 197:../Generated_Code/ServoTimer.c **** **     Parameters  :
 198:../Generated_Code/ServoTimer.c **** **         NAME            - DESCRIPTION
 199:../Generated_Code/ServoTimer.c **** **       * DeviceDataPtr   - Device data structure
 200:../Generated_Code/ServoTimer.c **** **                           pointer returned by <Init> method.
 201:../Generated_Code/ServoTimer.c **** **         ChannelIdx      - Index of the component
 202:../Generated_Code/ServoTimer.c **** **                           channel.
 203:../Generated_Code/ServoTimer.c **** **         Ticks           - Number of counter ticks to compare
 204:../Generated_Code/ServoTimer.c **** **                           match.
 205:../Generated_Code/ServoTimer.c **** **     Returns     :
 206:../Generated_Code/ServoTimer.c **** **         ---             - Error code, possible codes:
 207:../Generated_Code/ServoTimer.c **** **                           ERR_OK - OK 
 208:../Generated_Code/ServoTimer.c **** **                           ERR_PARAM_INDEX - ChannelIdx parameter is
 209:../Generated_Code/ServoTimer.c **** **                           out of possible range.
 210:../Generated_Code/ServoTimer.c **** **                           ERR_NOTAVAIL -  The compare mode is not
 211:../Generated_Code/ServoTimer.c **** **                           selected for selected channel
 212:../Generated_Code/ServoTimer.c **** **                           ERR_PARAM_TICKS - Ticks parameter is out of
 213:../Generated_Code/ServoTimer.c **** **                           possible range.
 214:../Generated_Code/ServoTimer.c **** **                           ERR_SPEED - The component does not work in
 215:../Generated_Code/ServoTimer.c **** **                           the active clock configuration
 216:../Generated_Code/ServoTimer.c **** ** ===================================================================
 217:../Generated_Code/ServoTimer.c **** */
 218:../Generated_Code/ServoTimer.c **** LDD_TError ServoTimer_SetOffsetTicks(LDD_TDeviceData *DeviceDataPtr, uint8_t ChannelIdx, ServoTimer
 219:../Generated_Code/ServoTimer.c **** {
 213              		.loc 1 219 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 16
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217              		@ link register save eliminated.
 218 0000 80B4     		push	{r7}
 219              	.LCFI6:
 220              		.cfi_def_cfa_offset 4
 221              		.cfi_offset 7, -4
 222 0002 85B0     		sub	sp, sp, #20
 223              	.LCFI7:
 224              		.cfi_def_cfa_offset 24
 225 0004 00AF     		add	r7, sp, #0
 226              	.LCFI8:
 227              		.cfi_def_cfa_register 7
 228 0006 F860     		str	r0, [r7, #12]
 229 0008 0B46     		mov	r3, r1
 230 000a 7A60     		str	r2, [r7, #4]
 231 000c FB72     		strb	r3, [r7, #11]
 220:../Generated_Code/ServoTimer.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 221:../Generated_Code/ServoTimer.c ****   /* Parameter test - this test can be disabled by setting the "Ignore range checking"
 222:../Generated_Code/ServoTimer.c ****      property to the "yes" value in the "Configuration inspector" */
 223:../Generated_Code/ServoTimer.c ****   if (ChannelIdx > LAST_CHANNEL) {     /* Is the channel index out of range? */
 232              		.loc 1 223 0
 233 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 234 0010 002B     		cmp	r3, #0
 235 0012 02D0     		beq	.L4
 224:../Generated_Code/ServoTimer.c ****     return ERR_PARAM_INDEX;            /* If yes then error */
 236              		.loc 1 224 0
 237 0014 4FF08203 		mov	r3, #130
 238 0018 26E0     		b	.L5
 239              	.L4:
 225:../Generated_Code/ServoTimer.c ****   }
 226:../Generated_Code/ServoTimer.c ****   if ((ChannelMode[ChannelIdx]) != 0U) { /* Is the channel in compare mode? */
 240              		.loc 1 226 0
 241 001a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 242 001c 40F20003 		movw	r3, #:lower16:ChannelMode
 243 0020 C0F20003 		movt	r3, #:upper16:ChannelMode
 244 0024 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 245 0026 002B     		cmp	r3, #0
 246 0028 02D0     		beq	.L6
 227:../Generated_Code/ServoTimer.c ****     return ERR_NOTAVAIL;               /* If not then error */
 247              		.loc 1 227 0
 248 002a 4FF00903 		mov	r3, #9
 249 002e 1BE0     		b	.L5
 250              	.L6:
 228:../Generated_Code/ServoTimer.c ****   }
 229:../Generated_Code/ServoTimer.c ****   FTM_PDD_WriteChannelValueReg(FTM2_BASE_PTR, ChannelDevice[ChannelIdx], (uint16_t)Ticks);
 251              		.loc 1 229 0
 252 0030 4FF40042 		mov	r2, #32768
 253 0034 C4F20B02 		movt	r2, 16395
 254 0038 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 255 003a 40F20003 		movw	r3, #:lower16:ChannelDevice
 256 003e C0F20003 		movt	r3, #:upper16:ChannelDevice
 257 0042 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 258 0044 7968     		ldr	r1, [r7, #4]
 259 0046 89B2     		uxth	r1, r1
 260 0048 03F10103 		add	r3, r3, #1
 261 004c 4FEAC303 		lsl	r3, r3, #3
 262 0050 D318     		adds	r3, r2, r3
 263 0052 9960     		str	r1, [r3, #8]
 230:../Generated_Code/ServoTimer.c ****   if (Ticks > 65535U) {                /* Was the given value greater than counter width? */
 264              		.loc 1 230 0
 265 0054 7A68     		ldr	r2, [r7, #4]
 266 0056 4FF6FF73 		movw	r3, #65535
 267 005a 9A42     		cmp	r2, r3
 268 005c 02D9     		bls	.L7
 231:../Generated_Code/ServoTimer.c ****     return ERR_PARAM_TICKS;            /* If yes then truncation of user data to 16 bits is reporte
 269              		.loc 1 231 0
 270 005e 4FF09803 		mov	r3, #152
 271 0062 01E0     		b	.L5
 272              	.L7:
 232:../Generated_Code/ServoTimer.c ****   }
 233:../Generated_Code/ServoTimer.c ****   return ERR_OK;                       /* OK */
 273              		.loc 1 233 0
 274 0064 4FF00003 		mov	r3, #0
 275              	.L5:
 234:../Generated_Code/ServoTimer.c **** }
 276              		.loc 1 234 0
 277 0068 1846     		mov	r0, r3
 278 006a 07F11407 		add	r7, r7, #20
 279 006e BD46     		mov	sp, r7
 280 0070 80BC     		pop	{r7}
 281 0072 7047     		bx	lr
 282              		.cfi_endproc
 283              	.LFE2:
 285              		.text
 286              	.Letext0:
 287              		.file 2 "C:/Freescale/CW MCU v10.3_NOBETA/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 288              		.file 3 "../Generated_Code/IO_Map.h"
 289              		.file 4 "../Generated_Code/PE_LDD.h"
 290              		.file 5 "../Generated_Code/ServoTimer.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ServoTimer.c
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:19     .rodata.ChannelDevice:00000000 $d
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:22     .rodata.ChannelDevice:00000000 ChannelDevice
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:25     .rodata.ChannelMode:00000000 $d
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:28     .rodata.ChannelMode:00000000 ChannelMode
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:31     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:34     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:37     .text.ServoTimer_Init:00000000 $t
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:42     .text.ServoTimer_Init:00000000 ServoTimer_Init
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:158    .text.ServoTimer_Deinit:00000000 $t
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:163    .text.ServoTimer_Deinit:00000000 ServoTimer_Deinit
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:206    .text.ServoTimer_SetOffsetTicks:00000000 $t
C:\Users\x\AppData\Local\Temp\ccwqIOAB.s:211    .text.ServoTimer_SetOffsetTicks:00000000 ServoTimer_SetOffsetTicks
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
