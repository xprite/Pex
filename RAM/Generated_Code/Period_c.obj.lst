   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Period.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  19              		.align	2
  22              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  23 0000 00000000 		.space	4
  24              		.section	.bss.INT_PIT1__DEFAULT_RTOS_ISRPARAM,"aw",%nobits
  25              		.align	2
  28              	INT_PIT1__DEFAULT_RTOS_ISRPARAM:
  29 0000 00000000 		.space	4
  30              		.section	.text.Period_Init,"ax",%progbits
  31              		.align	2
  32              		.global	Period_Init
  33              		.thumb
  34              		.thumb_func
  36              	Period_Init:
  37              	.LFB0:
  38              		.file 1 "../Generated_Code/Period.c"
   1:../Generated_Code/Period.c **** /** ###################################################################
   2:../Generated_Code/Period.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/Period.c **** **     Filename    : Period.c
   4:../Generated_Code/Period.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/Period.c **** **     Processor   : MK40DX256ZVLQ10
   6:../Generated_Code/Period.c **** **     Component   : TimerUnit_LDD
   7:../Generated_Code/Period.c **** **     Version     : Component 01.139, Driver 01.09, CPU db: 3.00.001
   8:../Generated_Code/Period.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/Period.c **** **     Date/Time   : 2013-04-11, 17:06, # CodeGen: 96
  10:../Generated_Code/Period.c **** **     Abstract    :
  11:../Generated_Code/Period.c **** **          This TimerUnit component provides a low level API for unified hardware access across
  12:../Generated_Code/Period.c **** **          various timer devices using the Prescaler-Counter-Compare-Capture timer structure.
  13:../Generated_Code/Period.c **** **     Settings    :
  14:../Generated_Code/Period.c **** **          Component name                                 : Period
  15:../Generated_Code/Period.c **** **          Module name                                    : PIT
  16:../Generated_Code/Period.c **** **          Counter                                        : PIT_CVAL1
  17:../Generated_Code/Period.c **** **          Counter direction                              : Down
  18:../Generated_Code/Period.c **** **          Counter width                                  : 32 bits
  19:../Generated_Code/Period.c **** **          Value type                                     : Optimal
  20:../Generated_Code/Period.c **** **          Input clock source                             : Internal
  21:../Generated_Code/Period.c **** **            Counter frequency                            : 48 MHz
  22:../Generated_Code/Period.c **** **          Counter restart                                : On-match
  23:../Generated_Code/Period.c **** **            Period device                                : PIT_LDVAL1
  24:../Generated_Code/Period.c **** **            Period                                       : 500 ms
  25:../Generated_Code/Period.c **** **            Interrupt                                    : Enabled
  26:../Generated_Code/Period.c **** **              Interrupt                                  : INT_PIT1
  27:../Generated_Code/Period.c **** **              Interrupt priority                         : medium priority
  28:../Generated_Code/Period.c **** **          Channel list                                   : 0
  29:../Generated_Code/Period.c **** **          Initialization                                 : 
  30:../Generated_Code/Period.c **** **            Enabled in init. code                        : yes
  31:../Generated_Code/Period.c **** **            Auto initialization                          : yes
  32:../Generated_Code/Period.c **** **            Event mask                                   : 
  33:../Generated_Code/Period.c **** **              OnCounterRestart                           : Enabled
  34:../Generated_Code/Period.c **** **              OnChannel0                                 : Disabled
  35:../Generated_Code/Period.c **** **              OnChannel1                                 : Disabled
  36:../Generated_Code/Period.c **** **              OnChannel2                                 : Disabled
  37:../Generated_Code/Period.c **** **              OnChannel3                                 : Disabled
  38:../Generated_Code/Period.c **** **              OnChannel4                                 : Disabled
  39:../Generated_Code/Period.c **** **              OnChannel5                                 : Disabled
  40:../Generated_Code/Period.c **** **              OnChannel6                                 : Disabled
  41:../Generated_Code/Period.c **** **              OnChannel7                                 : Disabled
  42:../Generated_Code/Period.c **** **          CPU clock/configuration selection              : 
  43:../Generated_Code/Period.c **** **            Clock configuration 0                        : This component enabled
  44:../Generated_Code/Period.c **** **            Clock configuration 1                        : This component disabled
  45:../Generated_Code/Period.c **** **            Clock configuration 2                        : This component disabled
  46:../Generated_Code/Period.c **** **            Clock configuration 3                        : This component disabled
  47:../Generated_Code/Period.c **** **            Clock configuration 4                        : This component disabled
  48:../Generated_Code/Period.c **** **            Clock configuration 5                        : This component disabled
  49:../Generated_Code/Period.c **** **            Clock configuration 6                        : This component disabled
  50:../Generated_Code/Period.c **** **            Clock configuration 7                        : This component disabled
  51:../Generated_Code/Period.c **** **     Contents    :
  52:../Generated_Code/Period.c **** **         Init   - LDD_TDeviceData* Period_Init(LDD_TUserData *UserDataPtr);
  53:../Generated_Code/Period.c **** **         Deinit - void Period_Deinit(LDD_TDeviceData *DeviceDataPtr);
  54:../Generated_Code/Period.c **** **
  55:../Generated_Code/Period.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  56:../Generated_Code/Period.c **** **     
  57:../Generated_Code/Period.c **** **     http      : www.freescale.com
  58:../Generated_Code/Period.c **** **     mail      : support@freescale.com
  59:../Generated_Code/Period.c **** ** ###################################################################*/
  60:../Generated_Code/Period.c **** 
  61:../Generated_Code/Period.c **** /* MODULE Period. */
  62:../Generated_Code/Period.c **** 
  63:../Generated_Code/Period.c **** #include "Events.h"
  64:../Generated_Code/Period.c **** #include "Period.h"
  65:../Generated_Code/Period.c **** /* {Default RTOS Adapter} No RTOS includes */
  66:../Generated_Code/Period.c **** #include "IO_Map.h"
  67:../Generated_Code/Period.c **** 
  68:../Generated_Code/Period.c **** 
  69:../Generated_Code/Period.c **** typedef struct {
  70:../Generated_Code/Period.c ****   LDD_TUserData *UserDataPtr;          /* RTOS device data structure */
  71:../Generated_Code/Period.c **** } Period_TDeviceData;
  72:../Generated_Code/Period.c **** 
  73:../Generated_Code/Period.c **** typedef Period_TDeviceData *Period_TDeviceDataPtr; /* Pointer to the device data structure. */
  74:../Generated_Code/Period.c **** 
  75:../Generated_Code/Period.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  76:../Generated_Code/Period.c **** static Period_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  77:../Generated_Code/Period.c **** /* {Default RTOS Adapter} Global variable used for passing a parameter into ISR */
  78:../Generated_Code/Period.c **** static Period_TDeviceDataPtr INT_PIT1__DEFAULT_RTOS_ISRPARAM;
  79:../Generated_Code/Period.c **** 
  80:../Generated_Code/Period.c **** #define AVAILABLE_EVENTS_MASK (LDD_TEventMask)(LDD_TIMERUNIT_ON_COUNTER_RESTART)
  81:../Generated_Code/Period.c **** 
  82:../Generated_Code/Period.c **** /* Internal method prototypes */
  83:../Generated_Code/Period.c **** /*
  84:../Generated_Code/Period.c **** ** ===================================================================
  85:../Generated_Code/Period.c **** **     Method      :  Period_Init (component TimerUnit_LDD)
  86:../Generated_Code/Period.c **** **
  87:../Generated_Code/Period.c **** **     Description :
  88:../Generated_Code/Period.c **** **         Initializes the device. Allocates memory for the device data
  89:../Generated_Code/Period.c **** **         structure, allocates interrupt vectors and sets interrupt
  90:../Generated_Code/Period.c **** **         priority, sets pin routing, sets timing, etc. If the
  91:../Generated_Code/Period.c **** **         property <"Enable in init. code"> is set to "yes" value then
  92:../Generated_Code/Period.c **** **         the device is also enabled (see the description of the
  93:../Generated_Code/Period.c **** **         <Enable> method). In this case the <Enable> method is not
  94:../Generated_Code/Period.c **** **         necessary and needn't to be generated. This method can be
  95:../Generated_Code/Period.c **** **         called only once. Before the second call of Init the <Deinit>
  96:../Generated_Code/Period.c **** **         must be called first.
  97:../Generated_Code/Period.c **** **     Parameters  :
  98:../Generated_Code/Period.c **** **         NAME            - DESCRIPTION
  99:../Generated_Code/Period.c **** **       * UserDataPtr     - Pointer to the user or
 100:../Generated_Code/Period.c **** **                           RTOS specific data. This pointer will be
 101:../Generated_Code/Period.c **** **                           passed as an event or callback parameter.
 102:../Generated_Code/Period.c **** **     Returns     :
 103:../Generated_Code/Period.c **** **         ---             - Pointer to the dynamically allocated
 104:../Generated_Code/Period.c **** **                           private structure or NULL if there was an
 105:../Generated_Code/Period.c **** **                           error.
 106:../Generated_Code/Period.c **** ** ===================================================================
 107:../Generated_Code/Period.c **** */
 108:../Generated_Code/Period.c **** LDD_TDeviceData* Period_Init(LDD_TUserData *UserDataPtr)
 109:../Generated_Code/Period.c **** {
  39              		.loc 1 109 0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 16
  42              		@ frame_needed = 1, uses_anonymous_args = 0
  43              		@ link register save eliminated.
  44 0000 80B4     		push	{r7}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 4
  47              		.cfi_offset 7, -4
  48 0002 85B0     		sub	sp, sp, #20
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 24
  51 0004 00AF     		add	r7, sp, #0
  52              	.LCFI2:
  53              		.cfi_def_cfa_register 7
  54 0006 7860     		str	r0, [r7, #4]
 110:../Generated_Code/Period.c ****   /* Allocate device structure */
 111:../Generated_Code/Period.c ****   Period_TDeviceData *DeviceDataPrv;
 112:../Generated_Code/Period.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 113:../Generated_Code/Period.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  55              		.loc 1 113 0
  56 0008 40F20003 		movw	r3, #:lower16:DeviceDataPrv__DEFAULT_RTOS_ALLOC
  57 000c C0F20003 		movt	r3, #:upper16:DeviceDataPrv__DEFAULT_RTOS_ALLOC
  58 0010 FB60     		str	r3, [r7, #12]
 114:../Generated_Code/Period.c ****   DeviceDataPrv->UserDataPtr = UserDataPtr; /* Store the RTOS device structure */
  59              		.loc 1 114 0
  60 0012 FB68     		ldr	r3, [r7, #12]
  61 0014 7A68     		ldr	r2, [r7, #4]
  62 0016 1A60     		str	r2, [r3, #0]
 115:../Generated_Code/Period.c ****   /* Interrupt vector(s) allocation */
 116:../Generated_Code/Period.c ****   /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the glo
 117:../Generated_Code/Period.c ****   INT_PIT1__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
  63              		.loc 1 117 0
  64 0018 40F20003 		movw	r3, #:lower16:INT_PIT1__DEFAULT_RTOS_ISRPARAM
  65 001c C0F20003 		movt	r3, #:upper16:INT_PIT1__DEFAULT_RTOS_ISRPARAM
  66 0020 FA68     		ldr	r2, [r7, #12]
  67 0022 1A60     		str	r2, [r3, #0]
 118:../Generated_Code/Period.c ****   /* SIM_SCGC6: PIT=1 */
 119:../Generated_Code/Period.c ****   SIM_SCGC6 |= SIM_SCGC6_PIT_MASK;                                                   
  68              		.loc 1 119 0
  69 0024 4FF4E043 		mov	r3, #28672
  70 0028 C4F20403 		movt	r3, 16388
  71 002c 4FF4E042 		mov	r2, #28672
  72 0030 C4F20402 		movt	r2, 16388
  73 0034 02F58052 		add	r2, r2, #4096
  74 0038 02F13C02 		add	r2, r2, #60
  75 003c 1268     		ldr	r2, [r2, #0]
  76 003e 42F40002 		orr	r2, r2, #8388608
  77 0042 03F58053 		add	r3, r3, #4096
  78 0046 03F13C03 		add	r3, r3, #60
  79 004a 1A60     		str	r2, [r3, #0]
 120:../Generated_Code/Period.c ****   /* PIT_MCR: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,
 121:../Generated_Code/Period.c ****   PIT_MCR = 0x00U;                     /* Enable device clock */
  80              		.loc 1 121 0
  81 004c 4FF4E043 		mov	r3, #28672
  82 0050 C4F20303 		movt	r3, 16387
  83 0054 4FF00002 		mov	r2, #0
  84 0058 1A60     		str	r2, [r3, #0]
 122:../Generated_Code/Period.c ****   /* PIT_TCTRL1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??
 123:../Generated_Code/Period.c ****   PIT_TCTRL1 = 0x00U;                  /* Clear control register */
  85              		.loc 1 123 0
  86 005a 4FF4E043 		mov	r3, #28672
  87 005e C4F20303 		movt	r3, 16387
  88 0062 4FF00002 		mov	r2, #0
  89 0066 C3F81821 		str	r2, [r3, #280]
 124:../Generated_Code/Period.c ****   /* PIT_TFLG1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=
 125:../Generated_Code/Period.c ****   PIT_TFLG1 = PIT_TFLG_TIF_MASK;       /* Clear timer flag register */
  90              		.loc 1 125 0
  91 006a 4FF4E043 		mov	r3, #28672
  92 006e C4F20303 		movt	r3, 16387
  93 0072 4FF00102 		mov	r2, #1
  94 0076 C3F81C21 		str	r2, [r3, #284]
 126:../Generated_Code/Period.c ****   /* PIT_LDVAL1: TSV=0x016E35FF */
 127:../Generated_Code/Period.c ****   PIT_LDVAL1 = PIT_LDVAL_TSV(0x016E35FF); /* Set up load register */
  95              		.loc 1 127 0
  96 007a 4FF4E043 		mov	r3, #28672
  97 007e C4F20303 		movt	r3, 16387
  98 0082 43F2FF52 		movw	r2, #13823
  99 0086 C0F26E12 		movt	r2, 366
 100 008a C3F81021 		str	r2, [r3, #272]
 128:../Generated_Code/Period.c ****   /* NVICIP69: PRI69=0x80 */
 129:../Generated_Code/Period.c ****   NVICIP69 = NVIC_IP_PRI69(0x80);                                                   
 101              		.loc 1 129 0
 102 008e 4FF46143 		mov	r3, #57600
 103 0092 CEF20003 		movt	r3, 57344
 104 0096 4FF08002 		mov	r2, #128
 105 009a 83F84523 		strb	r2, [r3, #837]
 130:../Generated_Code/Period.c ****   /* NVICISER2: SETENA|=0x20 */
 131:../Generated_Code/Period.c ****   NVICISER2 |= NVIC_ISER_SETENA(0x20);                                                   
 106              		.loc 1 131 0
 107 009e 4FF46143 		mov	r3, #57600
 108 00a2 CEF20003 		movt	r3, 57344
 109 00a6 4FF46142 		mov	r2, #57600
 110 00aa CEF20002 		movt	r2, 57344
 111 00ae 9268     		ldr	r2, [r2, #8]
 112 00b0 42F02002 		orr	r2, r2, #32
 113 00b4 9A60     		str	r2, [r3, #8]
 132:../Generated_Code/Period.c ****   /* PIT_TCTRL1: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??
 133:../Generated_Code/Period.c ****   PIT_TCTRL1 = (PIT_TCTRL_TIE_MASK | PIT_TCTRL_TEN_MASK); /* Set up control register */
 114              		.loc 1 133 0
 115 00b6 4FF4E043 		mov	r3, #28672
 116 00ba C4F20303 		movt	r3, 16387
 117 00be 4FF00302 		mov	r2, #3
 118 00c2 C3F81821 		str	r2, [r3, #280]
 134:../Generated_Code/Period.c ****   /* Registration of the device structure */
 135:../Generated_Code/Period.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_Period_ID,DeviceDataPrv);
 119              		.loc 1 135 0
 120 00c6 40F20003 		movw	r3, #:lower16:PE_LDD_DeviceDataList
 121 00ca C0F20003 		movt	r3, #:upper16:PE_LDD_DeviceDataList
 122 00ce FA68     		ldr	r2, [r7, #12]
 123 00d0 5A61     		str	r2, [r3, #20]
 136:../Generated_Code/Period.c ****   return ((LDD_TDeviceData *)DeviceDataPrv); /* Return pointer to the device data structure */
 124              		.loc 1 136 0
 125 00d2 FB68     		ldr	r3, [r7, #12]
 137:../Generated_Code/Period.c **** }
 126              		.loc 1 137 0
 127 00d4 1846     		mov	r0, r3
 128 00d6 07F11407 		add	r7, r7, #20
 129 00da BD46     		mov	sp, r7
 130 00dc 80BC     		pop	{r7}
 131 00de 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE0:
 135              		.section	.text.Period_Deinit,"ax",%progbits
 136              		.align	2
 137              		.global	Period_Deinit
 138              		.thumb
 139              		.thumb_func
 141              	Period_Deinit:
 142              	.LFB1:
 138:../Generated_Code/Period.c **** 
 139:../Generated_Code/Period.c **** /*
 140:../Generated_Code/Period.c **** ** ===================================================================
 141:../Generated_Code/Period.c **** **     Method      :  Period_Deinit (component TimerUnit_LDD)
 142:../Generated_Code/Period.c **** **
 143:../Generated_Code/Period.c **** **     Description :
 144:../Generated_Code/Period.c **** **         Deinitializes the device. Switches off the device, frees the
 145:../Generated_Code/Period.c **** **         device data structure memory, interrupts vectors, etc.
 146:../Generated_Code/Period.c **** **     Parameters  :
 147:../Generated_Code/Period.c **** **         NAME            - DESCRIPTION
 148:../Generated_Code/Period.c **** **       * DeviceDataPtr   - Device data structure
 149:../Generated_Code/Period.c **** **                           pointer returned by Init method
 150:../Generated_Code/Period.c **** **     Returns     : Nothing
 151:../Generated_Code/Period.c **** ** ===================================================================
 152:../Generated_Code/Period.c **** */
 153:../Generated_Code/Period.c **** void Period_Deinit(LDD_TDeviceData *DeviceDataPtr)
 154:../Generated_Code/Period.c **** {
 143              		.loc 1 154 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 16
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148 0000 80B4     		push	{r7}
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 7, -4
 152 0002 85B0     		sub	sp, sp, #20
 153              	.LCFI4:
 154              		.cfi_def_cfa_offset 24
 155 0004 00AF     		add	r7, sp, #0
 156              	.LCFI5:
 157              		.cfi_def_cfa_register 7
 158 0006 7860     		str	r0, [r7, #4]
 155:../Generated_Code/Period.c ****   Period_TDeviceData *DeviceDataPrv = (Period_TDeviceData *)DeviceDataPtr;
 159              		.loc 1 155 0
 160 0008 7B68     		ldr	r3, [r7, #4]
 161 000a FB60     		str	r3, [r7, #12]
 156:../Generated_Code/Period.c **** 
 157:../Generated_Code/Period.c ****   (void)DeviceDataPrv;
 158:../Generated_Code/Period.c ****   PIT_PDD_EnableDevice(PIT_BASE_PTR, PIT_PDD_CHANNEL_1, PDD_DISABLE);
 162              		.loc 1 158 0
 163 000c 4FF4E043 		mov	r3, #28672
 164 0010 C4F20303 		movt	r3, 16387
 165 0014 4FF4E042 		mov	r2, #28672
 166 0018 C4F20302 		movt	r2, 16387
 167 001c D2F81821 		ldr	r2, [r2, #280]
 168 0020 22F00102 		bic	r2, r2, #1
 169 0024 C3F81821 		str	r2, [r3, #280]
 159:../Generated_Code/Period.c ****   /* Interrupt vector(s) deallocation */
 160:../Generated_Code/Period.c ****   /* {Default RTOS Adapter} Restore interrupt vector: IVT is static, no code is generated */
 161:../Generated_Code/Period.c ****   PIT_PDD_ModuleClock(PIT_BASE_PTR, PIT_PDD_CLOCK_DISABLED);
 170              		.loc 1 161 0
 171 0028 4FF4E043 		mov	r3, #28672
 172 002c C4F20303 		movt	r3, 16387
 173 0030 4FF4E042 		mov	r2, #28672
 174 0034 C4F20302 		movt	r2, 16387
 175 0038 1268     		ldr	r2, [r2, #0]
 176 003a 42F00202 		orr	r2, r2, #2
 177 003e 1A60     		str	r2, [r3, #0]
 162:../Generated_Code/Period.c ****   /* Unregistration of the device structure */
 163:../Generated_Code/Period.c ****   PE_LDD_UnregisterDeviceStructure(PE_LDD_COMPONENT_Period_ID);
 178              		.loc 1 163 0
 179 0040 40F20003 		movw	r3, #:lower16:PE_LDD_DeviceDataList
 180 0044 C0F20003 		movt	r3, #:upper16:PE_LDD_DeviceDataList
 181 0048 4FF00002 		mov	r2, #0
 182 004c 5A61     		str	r2, [r3, #20]
 164:../Generated_Code/Period.c ****   /* Deallocation of the device structure */
 165:../Generated_Code/Period.c ****   /* {Default RTOS Adapter} Driver memory deallocation: Dynamic allocation is simulated, no dealloc
 166:../Generated_Code/Period.c **** }
 183              		.loc 1 166 0
 184 004e 07F11407 		add	r7, r7, #20
 185 0052 BD46     		mov	sp, r7
 186 0054 80BC     		pop	{r7}
 187 0056 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE1:
 191              		.section	.text.Period_Interrupt,"ax",%progbits
 192              		.align	2
 193              		.global	Period_Interrupt
 194              		.thumb
 195              		.thumb_func
 197              	Period_Interrupt:
 198              	.LFB2:
 167:../Generated_Code/Period.c **** 
 168:../Generated_Code/Period.c **** /*
 169:../Generated_Code/Period.c **** ** ===================================================================
 170:../Generated_Code/Period.c **** **     Method      :  Period_Interrupt (component TimerUnit_LDD)
 171:../Generated_Code/Period.c **** **
 172:../Generated_Code/Period.c **** **     Description :
 173:../Generated_Code/Period.c **** **         The method services the interrupt of the selected peripheral(s)
 174:../Generated_Code/Period.c **** **         and eventually invokes event(s) of the component.
 175:../Generated_Code/Period.c **** **         This method is internal. It is used by Processor Expert only.
 176:../Generated_Code/Period.c **** ** ===================================================================
 177:../Generated_Code/Period.c **** */
 178:../Generated_Code/Period.c **** PE_ISR(Period_Interrupt)
 179:../Generated_Code/Period.c **** {
 199              		.loc 1 179 0
 200              		.cfi_startproc
 201              		@ Stack Align: May be called with mis-aligned SP.
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 6846     		mov	r0, sp
 205              		.cfi_register 13, 0
 206 0002 20F00701 		bic	r1, r0, #7
 207 0006 8D46     		mov	sp, r1
 208 0008 81B5     		push	{r0, r7, lr}
 209              	.LCFI6:
 210              		.cfi_def_cfa_offset 12
 211              		.cfi_offset 14, -4
 212              		.cfi_offset 7, -8
 213              		.cfi_offset 13, -12
 214 000a 83B0     		sub	sp, sp, #12
 215              	.LCFI7:
 216              		.cfi_def_cfa_offset 24
 217 000c 00AF     		add	r7, sp, #0
 218              	.LCFI8:
 219              		.cfi_def_cfa_register 7
 180:../Generated_Code/Period.c ****   /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
 181:../Generated_Code/Period.c ****   Period_TDeviceDataPtr DeviceDataPrv = INT_PIT1__DEFAULT_RTOS_ISRPARAM;
 220              		.loc 1 181 0
 221 000e 40F20003 		movw	r3, #:lower16:INT_PIT1__DEFAULT_RTOS_ISRPARAM
 222 0012 C0F20003 		movt	r3, #:upper16:INT_PIT1__DEFAULT_RTOS_ISRPARAM
 223 0016 1B68     		ldr	r3, [r3, #0]
 224 0018 7B60     		str	r3, [r7, #4]
 182:../Generated_Code/Period.c **** 
 183:../Generated_Code/Period.c ****   PIT_PDD_ClearInterruptFlag(PIT_BASE_PTR, PIT_PDD_CHANNEL_1); /* Clear interrupt flag */
 225              		.loc 1 183 0
 226 001a 4FF4E043 		mov	r3, #28672
 227 001e C4F20303 		movt	r3, 16387
 228 0022 4FF00102 		mov	r2, #1
 229 0026 C3F81C21 		str	r2, [r3, #284]
 230 002a 4FF4E043 		mov	r3, #28672
 231 002e C4F20303 		movt	r3, 16387
 232 0032 D3F81031 		ldr	r3, [r3, #272]
 184:../Generated_Code/Period.c ****   Period_OnCounterRestart(DeviceDataPrv->UserDataPtr); /* Invoke OnCounterRestart event */
 233              		.loc 1 184 0
 234 0036 7B68     		ldr	r3, [r7, #4]
 235 0038 1B68     		ldr	r3, [r3, #0]
 236 003a 1846     		mov	r0, r3
 237 003c FFF7FEFF 		bl	Period_OnCounterRestart
 185:../Generated_Code/Period.c **** }
 238              		.loc 1 185 0
 239 0040 07F10C07 		add	r7, r7, #12
 240 0044 BD46     		mov	sp, r7
 241 0046 BDE88140 		pop	{r0, r7, lr}
 242 004a 8546     		mov	sp, r0
 243 004c 7047     		bx	lr
 244              		.cfi_endproc
 245              	.LFE2:
 247 004e 00BF     		.text
 248              	.Letext0:
 249              		.file 2 "C:/Freescale/CW MCU v10.3_121211/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 250              		.file 3 "C:/temp2/Pex/Generated_Code/IO_Map.h"
 251              		.file 4 "C:/temp2/Pex/Generated_Code/PE_LDD.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Period.c
C:\Users\z\AppData\Local\Temp\ccC1DAft.s:19     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\z\AppData\Local\Temp\ccC1DAft.s:22     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\z\AppData\Local\Temp\ccC1DAft.s:25     .bss.INT_PIT1__DEFAULT_RTOS_ISRPARAM:00000000 $d
C:\Users\z\AppData\Local\Temp\ccC1DAft.s:28     .bss.INT_PIT1__DEFAULT_RTOS_ISRPARAM:00000000 INT_PIT1__DEFAULT_RTOS_ISRPARAM
C:\Users\z\AppData\Local\Temp\ccC1DAft.s:31     .text.Period_Init:00000000 $t
C:\Users\z\AppData\Local\Temp\ccC1DAft.s:36     .text.Period_Init:00000000 Period_Init
C:\Users\z\AppData\Local\Temp\ccC1DAft.s:136    .text.Period_Deinit:00000000 $t
C:\Users\z\AppData\Local\Temp\ccC1DAft.s:141    .text.Period_Deinit:00000000 Period_Deinit
C:\Users\z\AppData\Local\Temp\ccC1DAft.s:192    .text.Period_Interrupt:00000000 $t
C:\Users\z\AppData\Local\Temp\ccC1DAft.s:197    .text.Period_Interrupt:00000000 Period_Interrupt
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
Period_OnCounterRestart
