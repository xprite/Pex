   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CsIO1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.__read_console,"ax",%progbits
  19              		.align	2
  20              		.global	__read_console
  21              		.thumb
  22              		.thumb_func
  24              	__read_console:
  25              	.LFB0:
  26              		.file 1 "../Generated_Code/CsIO1.c"
   1:../Generated_Code/CsIO1.c **** /** ###################################################################
   2:../Generated_Code/CsIO1.c **** **     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
   3:../Generated_Code/CsIO1.c **** **     Filename    : CsIO1.c
   4:../Generated_Code/CsIO1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/CsIO1.c **** **     Processor   : MK40DX256ZVLQ10
   6:../Generated_Code/CsIO1.c **** **     Component   : ConsoleIO
   7:../Generated_Code/CsIO1.c **** **     Version     : Component 01.012, Driver 01.00, CPU db: 3.00.001
   8:../Generated_Code/CsIO1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/CsIO1.c **** **     Date/Time   : 2013-04-11, 15:40, # CodeGen: 91
  10:../Generated_Code/CsIO1.c **** **     Abstract    :
  11:../Generated_Code/CsIO1.c **** **         This component generates low-level methods for redirecting console I/O to the selected U
  12:../Generated_Code/CsIO1.c **** **         These methods are typically used by printf()/scanf() methods.
  13:../Generated_Code/CsIO1.c **** **     Settings    :
  14:../Generated_Code/CsIO1.c **** **          Component name                                 : CsIO1
  15:../Generated_Code/CsIO1.c **** **          Serial_LDD_Link                                : ConsoleIO_Serial_LDD
  16:../Generated_Code/CsIO1.c **** **     Contents    :
  17:../Generated_Code/CsIO1.c **** **         No public methods
  18:../Generated_Code/CsIO1.c **** **
  19:../Generated_Code/CsIO1.c **** **     Copyright : 1997 - 2012 Freescale, Inc. All Rights Reserved.
  20:../Generated_Code/CsIO1.c **** **     
  21:../Generated_Code/CsIO1.c **** **     http      : www.freescale.com
  22:../Generated_Code/CsIO1.c **** **     mail      : support@freescale.com
  23:../Generated_Code/CsIO1.c **** ** ###################################################################*/
  24:../Generated_Code/CsIO1.c **** 
  25:../Generated_Code/CsIO1.c **** /* MODULE CsIO1. */
  26:../Generated_Code/CsIO1.c **** 
  27:../Generated_Code/CsIO1.c **** #include "IO_Map.h"
  28:../Generated_Code/CsIO1.c **** #include "stdio.h"
  29:../Generated_Code/CsIO1.c **** #include <stdarg.h>
  30:../Generated_Code/CsIO1.c **** #include "UART_PDD.h"
  31:../Generated_Code/CsIO1.c **** 
  32:../Generated_Code/CsIO1.c **** #ifdef _EWL_STDINT_H
  33:../Generated_Code/CsIO1.c **** 
  34:../Generated_Code/CsIO1.c **** /*
  35:../Generated_Code/CsIO1.c **** ** ===================================================================
  36:../Generated_Code/CsIO1.c **** **     Method      :  CsIO1___read_console (component ConsoleIO)
  37:../Generated_Code/CsIO1.c **** **
  38:../Generated_Code/CsIO1.c **** **     Description :
  39:../Generated_Code/CsIO1.c **** **         __read_console
  40:../Generated_Code/CsIO1.c **** **         This method is internal. It is used by Processor Expert only.
  41:../Generated_Code/CsIO1.c **** ** ===================================================================
  42:../Generated_Code/CsIO1.c **** */
  43:../Generated_Code/CsIO1.c **** int __read_console(__file_handle handle, unsigned char* buffer, size_t * count)
  44:../Generated_Code/CsIO1.c **** {
  27              		.loc 1 44 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 32
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 F860     		str	r0, [r7, #12]
  43 0008 B960     		str	r1, [r7, #8]
  44 000a 7A60     		str	r2, [r7, #4]
  45:../Generated_Code/CsIO1.c ****   size_t CharCnt = 0x00;
  45              		.loc 1 45 0
  46 000c 4FF00003 		mov	r3, #0
  47 0010 7B61     		str	r3, [r7, #20]
  46:../Generated_Code/CsIO1.c **** 
  47:../Generated_Code/CsIO1.c ****   (void)handle;                        /* Parameter is not used, suppress unused argument warning *
  48:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
  48              		.loc 1 48 0
  49 0012 36E0     		b	.L2
  50              	.L8:
  49:../Generated_Code/CsIO1.c ****     if ((UART_PDD_ReadInterruptStatusReg(UART0_BASE_PTR) & UART_S1_RDRF_MASK) == 0x00) { /* Any dat
  51              		.loc 1 49 0
  52 0014 4FF42043 		mov	r3, #40960
  53 0018 C4F20603 		movt	r3, 16390
  54 001c 1B79     		ldrb	r3, [r3, #4]
  55 001e DBB2     		uxtb	r3, r3
  56 0020 03F02003 		and	r3, r3, #32
  57 0024 002B     		cmp	r3, #0
  58 0026 0DD1     		bne	.L3
  50:../Generated_Code/CsIO1.c ****       if (CharCnt != 0x00) {           /* No, at least one char received? */
  59              		.loc 1 50 0
  60 0028 7B69     		ldr	r3, [r7, #20]
  61 002a 002B     		cmp	r3, #0
  62 002c 2ED1     		bne	.L9
  51:../Generated_Code/CsIO1.c ****         break;                         /* Yes, return received char(s) */
  52:../Generated_Code/CsIO1.c ****       } else {                         /* Wait until a char is received */
  53:../Generated_Code/CsIO1.c ****         while ((UART_PDD_ReadInterruptStatusReg(UART0_BASE_PTR) & UART_S1_RDRF_MASK) == 0x00) {};
  63              		.loc 1 53 0
  64 002e 00BF     		nop
  65              	.L6:
  66              		.loc 1 53 0 is_stmt 0 discriminator 1
  67 0030 4FF42043 		mov	r3, #40960
  68 0034 C4F20603 		movt	r3, 16390
  69 0038 1B79     		ldrb	r3, [r3, #4]
  70 003a DBB2     		uxtb	r3, r3
  71 003c 03F02003 		and	r3, r3, #32
  72 0040 002B     		cmp	r3, #0
  73 0042 F5D0     		beq	.L6
  74              	.L3:
  54:../Generated_Code/CsIO1.c ****       }
  55:../Generated_Code/CsIO1.c ****     }
  56:../Generated_Code/CsIO1.c ****     CharCnt++;                         /* Increase char counter */
  75              		.loc 1 56 0 is_stmt 1
  76 0044 7B69     		ldr	r3, [r7, #20]
  77 0046 03F10103 		add	r3, r3, #1
  78 004a 7B61     		str	r3, [r7, #20]
  57:../Generated_Code/CsIO1.c ****     /* Save character received by UARTx device into the receive buffer */
  58:../Generated_Code/CsIO1.c ****     *buffer = (unsigned char)UART_PDD_GetChar8(UART0_BASE_PTR);
  79              		.loc 1 58 0
  80 004c 4FF42043 		mov	r3, #40960
  81 0050 C4F20603 		movt	r3, 16390
  82 0054 DB79     		ldrb	r3, [r3, #7]
  83 0056 DAB2     		uxtb	r2, r3
  84 0058 BB68     		ldr	r3, [r7, #8]
  85 005a 1A70     		strb	r2, [r3, #0]
  59:../Generated_Code/CsIO1.c ****     /* Stop reading if CR (Ox0D) character is received */
  60:../Generated_Code/CsIO1.c ****     if (*buffer == 0x0DU) {            /* New line character (CR) received ? */
  86              		.loc 1 60 0
  87 005c BB68     		ldr	r3, [r7, #8]
  88 005e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  89 0060 0D2B     		cmp	r3, #13
  90 0062 04D1     		bne	.L7
  61:../Generated_Code/CsIO1.c ****       *buffer = '\n';                  /* Yes, convert LF to '\n' char. */
  91              		.loc 1 61 0
  92 0064 BB68     		ldr	r3, [r7, #8]
  93 0066 4FF00A02 		mov	r2, #10
  94 006a 1A70     		strb	r2, [r3, #0]
  62:../Generated_Code/CsIO1.c ****       break;                           /* Stop loop and return received char(s) */
  95              		.loc 1 62 0
  96 006c 0FE0     		b	.L5
  97              	.L7:
  63:../Generated_Code/CsIO1.c ****     }
  64:../Generated_Code/CsIO1.c ****     buffer++;                          /* Increase buffer pointer */
  98              		.loc 1 64 0
  99 006e BB68     		ldr	r3, [r7, #8]
 100 0070 03F10103 		add	r3, r3, #1
 101 0074 BB60     		str	r3, [r7, #8]
  48:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
 102              		.loc 1 48 0
 103 0076 7B68     		ldr	r3, [r7, #4]
 104 0078 1B68     		ldr	r3, [r3, #0]
 105 007a 03F1FF32 		add	r2, r3, #-1
 106 007e 7B68     		ldr	r3, [r7, #4]
 107 0080 1A60     		str	r2, [r3, #0]
 108              	.L2:
  48:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
 109              		.loc 1 48 0 is_stmt 0 discriminator 1
 110 0082 7B68     		ldr	r3, [r7, #4]
 111 0084 1B68     		ldr	r3, [r3, #0]
 112 0086 002B     		cmp	r3, #0
 113 0088 C4D1     		bne	.L8
 114 008a 00E0     		b	.L5
 115              	.L9:
  51:../Generated_Code/CsIO1.c ****         break;                         /* Yes, return received char(s) */
 116              		.loc 1 51 0 is_stmt 1
 117 008c 00BF     		nop
 118              	.L5:
  65:../Generated_Code/CsIO1.c ****   }
  66:../Generated_Code/CsIO1.c ****   *count = CharCnt;
 119              		.loc 1 66 0
 120 008e 7B68     		ldr	r3, [r7, #4]
 121 0090 7A69     		ldr	r2, [r7, #20]
 122 0092 1A60     		str	r2, [r3, #0]
  67:../Generated_Code/CsIO1.c ****   return (__no_io_error);
 123              		.loc 1 67 0
 124 0094 4FF00003 		mov	r3, #0
  68:../Generated_Code/CsIO1.c **** }
 125              		.loc 1 68 0
 126 0098 1846     		mov	r0, r3
 127 009a 07F11C07 		add	r7, r7, #28
 128 009e BD46     		mov	sp, r7
 129 00a0 80BC     		pop	{r7}
 130 00a2 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE0:
 134              		.section	.text.__write_console,"ax",%progbits
 135              		.align	2
 136              		.global	__write_console
 137              		.thumb
 138              		.thumb_func
 140              	__write_console:
 141              	.LFB1:
  69:../Generated_Code/CsIO1.c **** 
  70:../Generated_Code/CsIO1.c **** /*
  71:../Generated_Code/CsIO1.c **** ** ===================================================================
  72:../Generated_Code/CsIO1.c **** **     Method      :  CsIO1___write_console (component ConsoleIO)
  73:../Generated_Code/CsIO1.c **** **
  74:../Generated_Code/CsIO1.c **** **     Description :
  75:../Generated_Code/CsIO1.c **** **         __write_console
  76:../Generated_Code/CsIO1.c **** **         This method is internal. It is used by Processor Expert only.
  77:../Generated_Code/CsIO1.c **** ** ===================================================================
  78:../Generated_Code/CsIO1.c **** */
  79:../Generated_Code/CsIO1.c **** int __write_console(__file_handle handle, unsigned char* buffer, size_t* count)
  80:../Generated_Code/CsIO1.c **** {
 142              		.loc 1 80 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 24
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147 0000 80B4     		push	{r7}
 148              	.LCFI3:
 149              		.cfi_def_cfa_offset 4
 150              		.cfi_offset 7, -4
 151 0002 87B0     		sub	sp, sp, #28
 152              	.LCFI4:
 153              		.cfi_def_cfa_offset 32
 154 0004 00AF     		add	r7, sp, #0
 155              	.LCFI5:
 156              		.cfi_def_cfa_register 7
 157 0006 F860     		str	r0, [r7, #12]
 158 0008 B960     		str	r1, [r7, #8]
 159 000a 7A60     		str	r2, [r7, #4]
  81:../Generated_Code/CsIO1.c ****   size_t CharCnt = 0x00;
 160              		.loc 1 81 0
 161 000c 4FF00003 		mov	r3, #0
 162 0010 7B61     		str	r3, [r7, #20]
  82:../Generated_Code/CsIO1.c **** 
  83:../Generated_Code/CsIO1.c ****   (void)handle;                        /* Parameter is not used, suppress unused argument warning *
  84:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
 163              		.loc 1 84 0
 164 0012 35E0     		b	.L11
 165              	.L16:
  85:../Generated_Code/CsIO1.c ****     /* Wait until UART is ready for saving a next character into the transmit buffer */
  86:../Generated_Code/CsIO1.c ****     while ((UART_PDD_ReadInterruptStatusReg(UART0_BASE_PTR) & UART_S1_TDRE_MASK) == 0) {};
 166              		.loc 1 86 0
 167 0014 00BF     		nop
 168              	.L12:
 169              		.loc 1 86 0 is_stmt 0 discriminator 1
 170 0016 4FF42043 		mov	r3, #40960
 171 001a C4F20603 		movt	r3, 16390
 172 001e 1B79     		ldrb	r3, [r3, #4]
 173 0020 DBB2     		uxtb	r3, r3
 174 0022 DBB2     		uxtb	r3, r3
 175 0024 5BB2     		sxtb	r3, r3
 176 0026 002B     		cmp	r3, #0
 177 0028 F5DA     		bge	.L12
  87:../Generated_Code/CsIO1.c ****     if (*buffer == '\n') {
 178              		.loc 1 87 0 is_stmt 1
 179 002a BB68     		ldr	r3, [r7, #8]
 180 002c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 181 002e 0A2B     		cmp	r3, #10
 182 0030 11D1     		bne	.L13
  88:../Generated_Code/CsIO1.c ****       /* Send '\r'(0x0D) before each '\n'(0x0A). */
  89:../Generated_Code/CsIO1.c ****       /* Save a character into the transmit buffer of the UART0 device */
  90:../Generated_Code/CsIO1.c ****       UART_PDD_PutChar8(UART0_BASE_PTR, 0x0DU);
 183              		.loc 1 90 0
 184 0032 4FF42043 		mov	r3, #40960
 185 0036 C4F20603 		movt	r3, 16390
 186 003a 4FF00D02 		mov	r2, #13
 187 003e DA71     		strb	r2, [r3, #7]
  91:../Generated_Code/CsIO1.c ****       /* Wait until UART is ready for saving a next character into the transmit buffer */
  92:../Generated_Code/CsIO1.c ****       while ((UART_PDD_ReadInterruptStatusReg(UART0_BASE_PTR) & UART_S1_TDRE_MASK) == 0) {};
 188              		.loc 1 92 0
 189 0040 00BF     		nop
 190              	.L14:
 191              		.loc 1 92 0 is_stmt 0 discriminator 1
 192 0042 4FF42043 		mov	r3, #40960
 193 0046 C4F20603 		movt	r3, 16390
 194 004a 1B79     		ldrb	r3, [r3, #4]
 195 004c DBB2     		uxtb	r3, r3
 196 004e DBB2     		uxtb	r3, r3
 197 0050 5BB2     		sxtb	r3, r3
 198 0052 002B     		cmp	r3, #0
 199 0054 F5DA     		bge	.L14
 200              	.L13:
  93:../Generated_Code/CsIO1.c ****     }
  94:../Generated_Code/CsIO1.c ****     /* Save a character into the transmit buffer of the UART0 device */
  95:../Generated_Code/CsIO1.c ****     UART_PDD_PutChar8(UART0_BASE_PTR, (unsigned char)*buffer);
 201              		.loc 1 95 0 is_stmt 1
 202 0056 4FF42043 		mov	r3, #40960
 203 005a C4F20603 		movt	r3, 16390
 204 005e BA68     		ldr	r2, [r7, #8]
 205 0060 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 206 0062 DA71     		strb	r2, [r3, #7]
  96:../Generated_Code/CsIO1.c ****     buffer++;                          /* Increase buffer pointer */
 207              		.loc 1 96 0
 208 0064 BB68     		ldr	r3, [r7, #8]
 209 0066 03F10103 		add	r3, r3, #1
 210 006a BB60     		str	r3, [r7, #8]
  97:../Generated_Code/CsIO1.c ****     CharCnt++;                         /* Increase char counter */
 211              		.loc 1 97 0
 212 006c 7B69     		ldr	r3, [r7, #20]
 213 006e 03F10103 		add	r3, r3, #1
 214 0072 7B61     		str	r3, [r7, #20]
  84:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
 215              		.loc 1 84 0
 216 0074 7B68     		ldr	r3, [r7, #4]
 217 0076 1B68     		ldr	r3, [r3, #0]
 218 0078 03F1FF32 		add	r2, r3, #-1
 219 007c 7B68     		ldr	r3, [r7, #4]
 220 007e 1A60     		str	r2, [r3, #0]
 221              	.L11:
  84:../Generated_Code/CsIO1.c ****   for (;*count > 0x00; --*count) {
 222              		.loc 1 84 0 is_stmt 0 discriminator 1
 223 0080 7B68     		ldr	r3, [r7, #4]
 224 0082 1B68     		ldr	r3, [r3, #0]
 225 0084 002B     		cmp	r3, #0
 226 0086 C5D1     		bne	.L16
  98:../Generated_Code/CsIO1.c ****   }
  99:../Generated_Code/CsIO1.c ****   *count = CharCnt;
 227              		.loc 1 99 0 is_stmt 1
 228 0088 7B68     		ldr	r3, [r7, #4]
 229 008a 7A69     		ldr	r2, [r7, #20]
 230 008c 1A60     		str	r2, [r3, #0]
 100:../Generated_Code/CsIO1.c ****   return(__no_io_error);
 231              		.loc 1 100 0
 232 008e 4FF00003 		mov	r3, #0
 101:../Generated_Code/CsIO1.c **** }
 233              		.loc 1 101 0
 234 0092 1846     		mov	r0, r3
 235 0094 07F11C07 		add	r7, r7, #28
 236 0098 BD46     		mov	sp, r7
 237 009a 80BC     		pop	{r7}
 238 009c 7047     		bx	lr
 239              		.cfi_endproc
 240              	.LFE1:
 242 009e 00BF     		.section	.text.__close_console,"ax",%progbits
 243              		.align	2
 244              		.global	__close_console
 245              		.thumb
 246              		.thumb_func
 248              	__close_console:
 249              	.LFB2:
 102:../Generated_Code/CsIO1.c **** 
 103:../Generated_Code/CsIO1.c **** /*
 104:../Generated_Code/CsIO1.c **** ** ===================================================================
 105:../Generated_Code/CsIO1.c **** **     Method      :  CsIO1___close_console (component ConsoleIO)
 106:../Generated_Code/CsIO1.c **** **
 107:../Generated_Code/CsIO1.c **** **     Description :
 108:../Generated_Code/CsIO1.c **** **         __close_console
 109:../Generated_Code/CsIO1.c **** **         This method is internal. It is used by Processor Expert only.
 110:../Generated_Code/CsIO1.c **** ** ===================================================================
 111:../Generated_Code/CsIO1.c **** */
 112:../Generated_Code/CsIO1.c **** int __close_console(__file_handle handle)
 113:../Generated_Code/CsIO1.c **** {
 250              		.loc 1 113 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 8
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255 0000 80B4     		push	{r7}
 256              	.LCFI6:
 257              		.cfi_def_cfa_offset 4
 258              		.cfi_offset 7, -4
 259 0002 83B0     		sub	sp, sp, #12
 260              	.LCFI7:
 261              		.cfi_def_cfa_offset 16
 262 0004 00AF     		add	r7, sp, #0
 263              	.LCFI8:
 264              		.cfi_def_cfa_register 7
 265 0006 7860     		str	r0, [r7, #4]
 114:../Generated_Code/CsIO1.c ****   (void)handle;                        /* Parameter is not used, suppress unused argument warning *
 115:../Generated_Code/CsIO1.c ****   return(__no_io_error);
 266              		.loc 1 115 0
 267 0008 4FF00003 		mov	r3, #0
 116:../Generated_Code/CsIO1.c **** }
 268              		.loc 1 116 0
 269 000c 1846     		mov	r0, r3
 270 000e 07F10C07 		add	r7, r7, #12
 271 0012 BD46     		mov	sp, r7
 272 0014 80BC     		pop	{r7}
 273 0016 7047     		bx	lr
 274              		.cfi_endproc
 275              	.LFE2:
 277              		.text
 278              	.Letext0:
 279              		.file 2 "../Generated_Code/IO_Map.h"
 280              		.file 3 "C:/Freescale/CW MCU v10.3_121211/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 281              		.file 4 "C:/Freescale/CW MCU v10.3_121211/MCU/ARM_GCC_Support/ewl/EWL_C/include/size_t.h"
 282              		.file 5 "C:/Freescale/CW MCU v10.3_121211/MCU/ARM_GCC_Support/ewl/EWL_C/include/file_struc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 CsIO1.c
C:\Users\z\AppData\Local\Temp\cctb5ApP.s:19     .text.__read_console:00000000 $t
C:\Users\z\AppData\Local\Temp\cctb5ApP.s:24     .text.__read_console:00000000 __read_console
C:\Users\z\AppData\Local\Temp\cctb5ApP.s:135    .text.__write_console:00000000 $t
C:\Users\z\AppData\Local\Temp\cctb5ApP.s:140    .text.__write_console:00000000 __write_console
C:\Users\z\AppData\Local\Temp\cctb5ApP.s:243    .text.__close_console:00000000 $t
C:\Users\z\AppData\Local\Temp\cctb5ApP.s:248    .text.__close_console:00000000 __close_console
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
